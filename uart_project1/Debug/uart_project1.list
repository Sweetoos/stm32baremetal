
uart_project1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001228  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000048  080013f8  080013f8  000113f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001440  08001440  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001440  08001440  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001440  08001440  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001440  08001440  00011440  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001444  08001444  00011444  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001448  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  080014a4  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  080014a4  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000d2b  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000045f  00000000  00000000  00020dfa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000150  00000000  00000000  00021260  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000e3  00000000  00000000  000213b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001a7f0  00000000  00000000  00021493  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000019a8  00000000  00000000  0003bc83  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000909ed  00000000  00000000  0003d62b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000ba4  00000000  00000000  000ce018  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000074  00000000  00000000  000cebbc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000005c 	.word	0x2000005c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080013e0 	.word	0x080013e0

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000060 	.word	0x20000060
 800020c:	080013e0 	.word	0x080013e0

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:
#include "uart.h"



int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	af00      	add	r7, sp, #0
	uart_config();
 80002b4:	f000 f8da 	bl	800046c <uart_config>

		while(1)
		{
			printf("Hello my friend!\n\r");
 80002b8:	4801      	ldr	r0, [pc, #4]	; (80002c0 <main+0x10>)
 80002ba:	f000 fa1b 	bl	80006f4 <iprintf>
 80002be:	e7fb      	b.n	80002b8 <main+0x8>
 80002c0:	080013f8 	.word	0x080013f8

080002c4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002c4:	b580      	push	{r7, lr}
 80002c6:	b086      	sub	sp, #24
 80002c8:	af00      	add	r7, sp, #0
 80002ca:	60f8      	str	r0, [r7, #12]
 80002cc:	60b9      	str	r1, [r7, #8]
 80002ce:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002d0:	2300      	movs	r3, #0
 80002d2:	617b      	str	r3, [r7, #20]
 80002d4:	e00a      	b.n	80002ec <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002d6:	f3af 8000 	nop.w
 80002da:	4601      	mov	r1, r0
 80002dc:	68bb      	ldr	r3, [r7, #8]
 80002de:	1c5a      	adds	r2, r3, #1
 80002e0:	60ba      	str	r2, [r7, #8]
 80002e2:	b2ca      	uxtb	r2, r1
 80002e4:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002e6:	697b      	ldr	r3, [r7, #20]
 80002e8:	3301      	adds	r3, #1
 80002ea:	617b      	str	r3, [r7, #20]
 80002ec:	697a      	ldr	r2, [r7, #20]
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	429a      	cmp	r2, r3
 80002f2:	dbf0      	blt.n	80002d6 <_read+0x12>
  }

  return len;
 80002f4:	687b      	ldr	r3, [r7, #4]
}
 80002f6:	4618      	mov	r0, r3
 80002f8:	3718      	adds	r7, #24
 80002fa:	46bd      	mov	sp, r7
 80002fc:	bd80      	pop	{r7, pc}

080002fe <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002fe:	b580      	push	{r7, lr}
 8000300:	b086      	sub	sp, #24
 8000302:	af00      	add	r7, sp, #0
 8000304:	60f8      	str	r0, [r7, #12]
 8000306:	60b9      	str	r1, [r7, #8]
 8000308:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800030a:	2300      	movs	r3, #0
 800030c:	617b      	str	r3, [r7, #20]
 800030e:	e009      	b.n	8000324 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000310:	68bb      	ldr	r3, [r7, #8]
 8000312:	1c5a      	adds	r2, r3, #1
 8000314:	60ba      	str	r2, [r7, #8]
 8000316:	781b      	ldrb	r3, [r3, #0]
 8000318:	4618      	mov	r0, r3
 800031a:	f000 f8f3 	bl	8000504 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031e:	697b      	ldr	r3, [r7, #20]
 8000320:	3301      	adds	r3, #1
 8000322:	617b      	str	r3, [r7, #20]
 8000324:	697a      	ldr	r2, [r7, #20]
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	429a      	cmp	r2, r3
 800032a:	dbf1      	blt.n	8000310 <_write+0x12>
  }
  return len;
 800032c:	687b      	ldr	r3, [r7, #4]
}
 800032e:	4618      	mov	r0, r3
 8000330:	3718      	adds	r7, #24
 8000332:	46bd      	mov	sp, r7
 8000334:	bd80      	pop	{r7, pc}

08000336 <_close>:

int _close(int file)
{
 8000336:	b480      	push	{r7}
 8000338:	b083      	sub	sp, #12
 800033a:	af00      	add	r7, sp, #0
 800033c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800033e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8000342:	4618      	mov	r0, r3
 8000344:	370c      	adds	r7, #12
 8000346:	46bd      	mov	sp, r7
 8000348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800034c:	4770      	bx	lr

0800034e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800034e:	b480      	push	{r7}
 8000350:	b083      	sub	sp, #12
 8000352:	af00      	add	r7, sp, #0
 8000354:	6078      	str	r0, [r7, #4]
 8000356:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000358:	683b      	ldr	r3, [r7, #0]
 800035a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800035e:	605a      	str	r2, [r3, #4]
  return 0;
 8000360:	2300      	movs	r3, #0
}
 8000362:	4618      	mov	r0, r3
 8000364:	370c      	adds	r7, #12
 8000366:	46bd      	mov	sp, r7
 8000368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800036c:	4770      	bx	lr

0800036e <_isatty>:

int _isatty(int file)
{
 800036e:	b480      	push	{r7}
 8000370:	b083      	sub	sp, #12
 8000372:	af00      	add	r7, sp, #0
 8000374:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000376:	2301      	movs	r3, #1
}
 8000378:	4618      	mov	r0, r3
 800037a:	370c      	adds	r7, #12
 800037c:	46bd      	mov	sp, r7
 800037e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000382:	4770      	bx	lr

08000384 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000384:	b480      	push	{r7}
 8000386:	b085      	sub	sp, #20
 8000388:	af00      	add	r7, sp, #0
 800038a:	60f8      	str	r0, [r7, #12]
 800038c:	60b9      	str	r1, [r7, #8]
 800038e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000390:	2300      	movs	r3, #0
}
 8000392:	4618      	mov	r0, r3
 8000394:	3714      	adds	r7, #20
 8000396:	46bd      	mov	sp, r7
 8000398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800039c:	4770      	bx	lr
	...

080003a0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003a0:	b580      	push	{r7, lr}
 80003a2:	b086      	sub	sp, #24
 80003a4:	af00      	add	r7, sp, #0
 80003a6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003a8:	4a14      	ldr	r2, [pc, #80]	; (80003fc <_sbrk+0x5c>)
 80003aa:	4b15      	ldr	r3, [pc, #84]	; (8000400 <_sbrk+0x60>)
 80003ac:	1ad3      	subs	r3, r2, r3
 80003ae:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003b0:	697b      	ldr	r3, [r7, #20]
 80003b2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003b4:	4b13      	ldr	r3, [pc, #76]	; (8000404 <_sbrk+0x64>)
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	2b00      	cmp	r3, #0
 80003ba:	d102      	bne.n	80003c2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003bc:	4b11      	ldr	r3, [pc, #68]	; (8000404 <_sbrk+0x64>)
 80003be:	4a12      	ldr	r2, [pc, #72]	; (8000408 <_sbrk+0x68>)
 80003c0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003c2:	4b10      	ldr	r3, [pc, #64]	; (8000404 <_sbrk+0x64>)
 80003c4:	681a      	ldr	r2, [r3, #0]
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	4413      	add	r3, r2
 80003ca:	693a      	ldr	r2, [r7, #16]
 80003cc:	429a      	cmp	r2, r3
 80003ce:	d207      	bcs.n	80003e0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003d0:	f000 fa34 	bl	800083c <__errno>
 80003d4:	4603      	mov	r3, r0
 80003d6:	220c      	movs	r2, #12
 80003d8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003da:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80003de:	e009      	b.n	80003f4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003e0:	4b08      	ldr	r3, [pc, #32]	; (8000404 <_sbrk+0x64>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003e6:	4b07      	ldr	r3, [pc, #28]	; (8000404 <_sbrk+0x64>)
 80003e8:	681a      	ldr	r2, [r3, #0]
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	4413      	add	r3, r2
 80003ee:	4a05      	ldr	r2, [pc, #20]	; (8000404 <_sbrk+0x64>)
 80003f0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003f2:	68fb      	ldr	r3, [r7, #12]
}
 80003f4:	4618      	mov	r0, r3
 80003f6:	3718      	adds	r7, #24
 80003f8:	46bd      	mov	sp, r7
 80003fa:	bd80      	pop	{r7, pc}
 80003fc:	20020000 	.word	0x20020000
 8000400:	00000400 	.word	0x00000400
 8000404:	20000078 	.word	0x20000078
 8000408:	200001c8 	.word	0x200001c8

0800040c <compute_uart_baudrate>:
#define SYS_FREQ 16000000U
#define APB1_CLK SYS_FREQ
#define USART_BAUDRATE 115200

static uint16_t compute_uart_baudrate(uint32_t PeriphClk, uint32_t baudrate)
{
 800040c:	b480      	push	{r7}
 800040e:	b083      	sub	sp, #12
 8000410:	af00      	add	r7, sp, #0
 8000412:	6078      	str	r0, [r7, #4]
 8000414:	6039      	str	r1, [r7, #0]
	return((PeriphClk + (baudrate/2))/baudrate);
 8000416:	683b      	ldr	r3, [r7, #0]
 8000418:	085a      	lsrs	r2, r3, #1
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	441a      	add	r2, r3
 800041e:	683b      	ldr	r3, [r7, #0]
 8000420:	fbb2 f3f3 	udiv	r3, r2, r3
 8000424:	b29b      	uxth	r3, r3
}
 8000426:	4618      	mov	r0, r3
 8000428:	370c      	adds	r7, #12
 800042a:	46bd      	mov	sp, r7
 800042c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000430:	4770      	bx	lr
	...

08000434 <uart_set_baudrate>:

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t baudrate)
{
 8000434:	b580      	push	{r7, lr}
 8000436:	b084      	sub	sp, #16
 8000438:	af00      	add	r7, sp, #0
 800043a:	60f8      	str	r0, [r7, #12]
 800043c:	60b9      	str	r1, [r7, #8]
 800043e:	607a      	str	r2, [r7, #4]
	USART2->BRR |= compute_uart_baudrate(APB1_CLK, USART_BAUDRATE);
 8000440:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8000444:	4807      	ldr	r0, [pc, #28]	; (8000464 <uart_set_baudrate+0x30>)
 8000446:	f7ff ffe1 	bl	800040c <compute_uart_baudrate>
 800044a:	4603      	mov	r3, r0
 800044c:	461a      	mov	r2, r3
 800044e:	4b06      	ldr	r3, [pc, #24]	; (8000468 <uart_set_baudrate+0x34>)
 8000450:	689b      	ldr	r3, [r3, #8]
 8000452:	4611      	mov	r1, r2
 8000454:	4a04      	ldr	r2, [pc, #16]	; (8000468 <uart_set_baudrate+0x34>)
 8000456:	430b      	orrs	r3, r1
 8000458:	6093      	str	r3, [r2, #8]
}
 800045a:	bf00      	nop
 800045c:	3710      	adds	r7, #16
 800045e:	46bd      	mov	sp, r7
 8000460:	bd80      	pop	{r7, pc}
 8000462:	bf00      	nop
 8000464:	00f42400 	.word	0x00f42400
 8000468:	40004400 	.word	0x40004400

0800046c <uart_config>:

void uart_config(void)
{
 800046c:	b580      	push	{r7, lr}
 800046e:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8000470:	4b14      	ldr	r3, [pc, #80]	; (80004c4 <uart_config+0x58>)
 8000472:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000474:	4a13      	ldr	r2, [pc, #76]	; (80004c4 <uart_config+0x58>)
 8000476:	f043 0301 	orr.w	r3, r3, #1
 800047a:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOA->MODER |= (GPIO_MODER_MODE2_1);
 800047c:	4b12      	ldr	r3, [pc, #72]	; (80004c8 <uart_config+0x5c>)
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	4a11      	ldr	r2, [pc, #68]	; (80004c8 <uart_config+0x5c>)
 8000482:	f043 0320 	orr.w	r3, r3, #32
 8000486:	6013      	str	r3, [r2, #0]
	GPIOA->AFR[0] |= ~(GPIO_AFRL_AFRL2_3);
 8000488:	4b0f      	ldr	r3, [pc, #60]	; (80004c8 <uart_config+0x5c>)
 800048a:	6a1b      	ldr	r3, [r3, #32]
 800048c:	4a0e      	ldr	r2, [pc, #56]	; (80004c8 <uart_config+0x5c>)
 800048e:	f463 6300 	orn	r3, r3, #2048	; 0x800
 8000492:	6213      	str	r3, [r2, #32]
	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8000494:	4b0b      	ldr	r3, [pc, #44]	; (80004c4 <uart_config+0x58>)
 8000496:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000498:	4a0a      	ldr	r2, [pc, #40]	; (80004c4 <uart_config+0x58>)
 800049a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800049e:	6413      	str	r3, [r2, #64]	; 0x40
	uart_set_baudrate(USART2, SYS_FREQ, USART_BAUDRATE);
 80004a0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80004a4:	4909      	ldr	r1, [pc, #36]	; (80004cc <uart_config+0x60>)
 80004a6:	480a      	ldr	r0, [pc, #40]	; (80004d0 <uart_config+0x64>)
 80004a8:	f7ff ffc4 	bl	8000434 <uart_set_baudrate>
	USART2->CR1 = USART_CR1_TE;
 80004ac:	4b08      	ldr	r3, [pc, #32]	; (80004d0 <uart_config+0x64>)
 80004ae:	2208      	movs	r2, #8
 80004b0:	60da      	str	r2, [r3, #12]
	USART2->CR1 |= USART_CR1_UE;
 80004b2:	4b07      	ldr	r3, [pc, #28]	; (80004d0 <uart_config+0x64>)
 80004b4:	68db      	ldr	r3, [r3, #12]
 80004b6:	4a06      	ldr	r2, [pc, #24]	; (80004d0 <uart_config+0x64>)
 80004b8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80004bc:	60d3      	str	r3, [r2, #12]
}
 80004be:	bf00      	nop
 80004c0:	bd80      	pop	{r7, pc}
 80004c2:	bf00      	nop
 80004c4:	40023800 	.word	0x40023800
 80004c8:	40020000 	.word	0x40020000
 80004cc:	00f42400 	.word	0x00f42400
 80004d0:	40004400 	.word	0x40004400

080004d4 <uart2_write>:

void uart2_write(int ch)
{
 80004d4:	b480      	push	{r7}
 80004d6:	b083      	sub	sp, #12
 80004d8:	af00      	add	r7, sp, #0
 80004da:	6078      	str	r0, [r7, #4]
	while(!((USART2->SR)&(1U<<7)));
 80004dc:	bf00      	nop
 80004de:	4b08      	ldr	r3, [pc, #32]	; (8000500 <uart2_write+0x2c>)
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80004e6:	2b00      	cmp	r3, #0
 80004e8:	d0f9      	beq.n	80004de <uart2_write+0xa>
	USART2->DR=(ch&0xFF);
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	4a04      	ldr	r2, [pc, #16]	; (8000500 <uart2_write+0x2c>)
 80004ee:	b2db      	uxtb	r3, r3
 80004f0:	6053      	str	r3, [r2, #4]
}
 80004f2:	bf00      	nop
 80004f4:	370c      	adds	r7, #12
 80004f6:	46bd      	mov	sp, r7
 80004f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004fc:	4770      	bx	lr
 80004fe:	bf00      	nop
 8000500:	40004400 	.word	0x40004400

08000504 <__io_putchar>:

int __io_putchar(int ch)
{
 8000504:	b580      	push	{r7, lr}
 8000506:	b082      	sub	sp, #8
 8000508:	af00      	add	r7, sp, #0
 800050a:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 800050c:	6878      	ldr	r0, [r7, #4]
 800050e:	f7ff ffe1 	bl	80004d4 <uart2_write>
	return ch;
 8000512:	687b      	ldr	r3, [r7, #4]
}
 8000514:	4618      	mov	r0, r3
 8000516:	3708      	adds	r7, #8
 8000518:	46bd      	mov	sp, r7
 800051a:	bd80      	pop	{r7, pc}

0800051c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800051c:	480d      	ldr	r0, [pc, #52]	; (8000554 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800051e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000520:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000524:	480c      	ldr	r0, [pc, #48]	; (8000558 <LoopForever+0x6>)
  ldr r1, =_edata
 8000526:	490d      	ldr	r1, [pc, #52]	; (800055c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000528:	4a0d      	ldr	r2, [pc, #52]	; (8000560 <LoopForever+0xe>)
  movs r3, #0
 800052a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800052c:	e002      	b.n	8000534 <LoopCopyDataInit>

0800052e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800052e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000530:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000532:	3304      	adds	r3, #4

08000534 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000534:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000536:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000538:	d3f9      	bcc.n	800052e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800053a:	4a0a      	ldr	r2, [pc, #40]	; (8000564 <LoopForever+0x12>)
  ldr r4, =_ebss
 800053c:	4c0a      	ldr	r4, [pc, #40]	; (8000568 <LoopForever+0x16>)
  movs r3, #0
 800053e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000540:	e001      	b.n	8000546 <LoopFillZerobss>

08000542 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000542:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000544:	3204      	adds	r2, #4

08000546 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000546:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000548:	d3fb      	bcc.n	8000542 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800054a:	f000 f97d 	bl	8000848 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800054e:	f7ff feaf 	bl	80002b0 <main>

08000552 <LoopForever>:

LoopForever:
  b LoopForever
 8000552:	e7fe      	b.n	8000552 <LoopForever>
  ldr   r0, =_estack
 8000554:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000558:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800055c:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000560:	08001448 	.word	0x08001448
  ldr r2, =_sbss
 8000564:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000568:	200001c8 	.word	0x200001c8

0800056c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800056c:	e7fe      	b.n	800056c <ADC_IRQHandler>
	...

08000570 <std>:
 8000570:	2300      	movs	r3, #0
 8000572:	b510      	push	{r4, lr}
 8000574:	4604      	mov	r4, r0
 8000576:	e9c0 3300 	strd	r3, r3, [r0]
 800057a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800057e:	6083      	str	r3, [r0, #8]
 8000580:	8181      	strh	r1, [r0, #12]
 8000582:	6643      	str	r3, [r0, #100]	; 0x64
 8000584:	81c2      	strh	r2, [r0, #14]
 8000586:	6183      	str	r3, [r0, #24]
 8000588:	4619      	mov	r1, r3
 800058a:	2208      	movs	r2, #8
 800058c:	305c      	adds	r0, #92	; 0x5c
 800058e:	f000 f906 	bl	800079e <memset>
 8000592:	4b0d      	ldr	r3, [pc, #52]	; (80005c8 <std+0x58>)
 8000594:	6263      	str	r3, [r4, #36]	; 0x24
 8000596:	4b0d      	ldr	r3, [pc, #52]	; (80005cc <std+0x5c>)
 8000598:	62a3      	str	r3, [r4, #40]	; 0x28
 800059a:	4b0d      	ldr	r3, [pc, #52]	; (80005d0 <std+0x60>)
 800059c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800059e:	4b0d      	ldr	r3, [pc, #52]	; (80005d4 <std+0x64>)
 80005a0:	6323      	str	r3, [r4, #48]	; 0x30
 80005a2:	4b0d      	ldr	r3, [pc, #52]	; (80005d8 <std+0x68>)
 80005a4:	6224      	str	r4, [r4, #32]
 80005a6:	429c      	cmp	r4, r3
 80005a8:	d006      	beq.n	80005b8 <std+0x48>
 80005aa:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80005ae:	4294      	cmp	r4, r2
 80005b0:	d002      	beq.n	80005b8 <std+0x48>
 80005b2:	33d0      	adds	r3, #208	; 0xd0
 80005b4:	429c      	cmp	r4, r3
 80005b6:	d105      	bne.n	80005c4 <std+0x54>
 80005b8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80005bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005c0:	f000 b966 	b.w	8000890 <__retarget_lock_init_recursive>
 80005c4:	bd10      	pop	{r4, pc}
 80005c6:	bf00      	nop
 80005c8:	08000719 	.word	0x08000719
 80005cc:	0800073b 	.word	0x0800073b
 80005d0:	08000773 	.word	0x08000773
 80005d4:	08000797 	.word	0x08000797
 80005d8:	2000007c 	.word	0x2000007c

080005dc <stdio_exit_handler>:
 80005dc:	4a02      	ldr	r2, [pc, #8]	; (80005e8 <stdio_exit_handler+0xc>)
 80005de:	4903      	ldr	r1, [pc, #12]	; (80005ec <stdio_exit_handler+0x10>)
 80005e0:	4803      	ldr	r0, [pc, #12]	; (80005f0 <stdio_exit_handler+0x14>)
 80005e2:	f000 b869 	b.w	80006b8 <_fwalk_sglue>
 80005e6:	bf00      	nop
 80005e8:	20000000 	.word	0x20000000
 80005ec:	0800113d 	.word	0x0800113d
 80005f0:	2000000c 	.word	0x2000000c

080005f4 <cleanup_stdio>:
 80005f4:	6841      	ldr	r1, [r0, #4]
 80005f6:	4b0c      	ldr	r3, [pc, #48]	; (8000628 <cleanup_stdio+0x34>)
 80005f8:	4299      	cmp	r1, r3
 80005fa:	b510      	push	{r4, lr}
 80005fc:	4604      	mov	r4, r0
 80005fe:	d001      	beq.n	8000604 <cleanup_stdio+0x10>
 8000600:	f000 fd9c 	bl	800113c <_fflush_r>
 8000604:	68a1      	ldr	r1, [r4, #8]
 8000606:	4b09      	ldr	r3, [pc, #36]	; (800062c <cleanup_stdio+0x38>)
 8000608:	4299      	cmp	r1, r3
 800060a:	d002      	beq.n	8000612 <cleanup_stdio+0x1e>
 800060c:	4620      	mov	r0, r4
 800060e:	f000 fd95 	bl	800113c <_fflush_r>
 8000612:	68e1      	ldr	r1, [r4, #12]
 8000614:	4b06      	ldr	r3, [pc, #24]	; (8000630 <cleanup_stdio+0x3c>)
 8000616:	4299      	cmp	r1, r3
 8000618:	d004      	beq.n	8000624 <cleanup_stdio+0x30>
 800061a:	4620      	mov	r0, r4
 800061c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000620:	f000 bd8c 	b.w	800113c <_fflush_r>
 8000624:	bd10      	pop	{r4, pc}
 8000626:	bf00      	nop
 8000628:	2000007c 	.word	0x2000007c
 800062c:	200000e4 	.word	0x200000e4
 8000630:	2000014c 	.word	0x2000014c

08000634 <global_stdio_init.part.0>:
 8000634:	b510      	push	{r4, lr}
 8000636:	4b0b      	ldr	r3, [pc, #44]	; (8000664 <global_stdio_init.part.0+0x30>)
 8000638:	4c0b      	ldr	r4, [pc, #44]	; (8000668 <global_stdio_init.part.0+0x34>)
 800063a:	4a0c      	ldr	r2, [pc, #48]	; (800066c <global_stdio_init.part.0+0x38>)
 800063c:	601a      	str	r2, [r3, #0]
 800063e:	4620      	mov	r0, r4
 8000640:	2200      	movs	r2, #0
 8000642:	2104      	movs	r1, #4
 8000644:	f7ff ff94 	bl	8000570 <std>
 8000648:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800064c:	2201      	movs	r2, #1
 800064e:	2109      	movs	r1, #9
 8000650:	f7ff ff8e 	bl	8000570 <std>
 8000654:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000658:	2202      	movs	r2, #2
 800065a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800065e:	2112      	movs	r1, #18
 8000660:	f7ff bf86 	b.w	8000570 <std>
 8000664:	200001b4 	.word	0x200001b4
 8000668:	2000007c 	.word	0x2000007c
 800066c:	080005dd 	.word	0x080005dd

08000670 <__sfp_lock_acquire>:
 8000670:	4801      	ldr	r0, [pc, #4]	; (8000678 <__sfp_lock_acquire+0x8>)
 8000672:	f000 b90e 	b.w	8000892 <__retarget_lock_acquire_recursive>
 8000676:	bf00      	nop
 8000678:	200001bd 	.word	0x200001bd

0800067c <__sfp_lock_release>:
 800067c:	4801      	ldr	r0, [pc, #4]	; (8000684 <__sfp_lock_release+0x8>)
 800067e:	f000 b909 	b.w	8000894 <__retarget_lock_release_recursive>
 8000682:	bf00      	nop
 8000684:	200001bd 	.word	0x200001bd

08000688 <__sinit>:
 8000688:	b510      	push	{r4, lr}
 800068a:	4604      	mov	r4, r0
 800068c:	f7ff fff0 	bl	8000670 <__sfp_lock_acquire>
 8000690:	6a23      	ldr	r3, [r4, #32]
 8000692:	b11b      	cbz	r3, 800069c <__sinit+0x14>
 8000694:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000698:	f7ff bff0 	b.w	800067c <__sfp_lock_release>
 800069c:	4b04      	ldr	r3, [pc, #16]	; (80006b0 <__sinit+0x28>)
 800069e:	6223      	str	r3, [r4, #32]
 80006a0:	4b04      	ldr	r3, [pc, #16]	; (80006b4 <__sinit+0x2c>)
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	2b00      	cmp	r3, #0
 80006a6:	d1f5      	bne.n	8000694 <__sinit+0xc>
 80006a8:	f7ff ffc4 	bl	8000634 <global_stdio_init.part.0>
 80006ac:	e7f2      	b.n	8000694 <__sinit+0xc>
 80006ae:	bf00      	nop
 80006b0:	080005f5 	.word	0x080005f5
 80006b4:	200001b4 	.word	0x200001b4

080006b8 <_fwalk_sglue>:
 80006b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006bc:	4607      	mov	r7, r0
 80006be:	4688      	mov	r8, r1
 80006c0:	4614      	mov	r4, r2
 80006c2:	2600      	movs	r6, #0
 80006c4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006c8:	f1b9 0901 	subs.w	r9, r9, #1
 80006cc:	d505      	bpl.n	80006da <_fwalk_sglue+0x22>
 80006ce:	6824      	ldr	r4, [r4, #0]
 80006d0:	2c00      	cmp	r4, #0
 80006d2:	d1f7      	bne.n	80006c4 <_fwalk_sglue+0xc>
 80006d4:	4630      	mov	r0, r6
 80006d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006da:	89ab      	ldrh	r3, [r5, #12]
 80006dc:	2b01      	cmp	r3, #1
 80006de:	d907      	bls.n	80006f0 <_fwalk_sglue+0x38>
 80006e0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006e4:	3301      	adds	r3, #1
 80006e6:	d003      	beq.n	80006f0 <_fwalk_sglue+0x38>
 80006e8:	4629      	mov	r1, r5
 80006ea:	4638      	mov	r0, r7
 80006ec:	47c0      	blx	r8
 80006ee:	4306      	orrs	r6, r0
 80006f0:	3568      	adds	r5, #104	; 0x68
 80006f2:	e7e9      	b.n	80006c8 <_fwalk_sglue+0x10>

080006f4 <iprintf>:
 80006f4:	b40f      	push	{r0, r1, r2, r3}
 80006f6:	b507      	push	{r0, r1, r2, lr}
 80006f8:	4906      	ldr	r1, [pc, #24]	; (8000714 <iprintf+0x20>)
 80006fa:	ab04      	add	r3, sp, #16
 80006fc:	6808      	ldr	r0, [r1, #0]
 80006fe:	f853 2b04 	ldr.w	r2, [r3], #4
 8000702:	6881      	ldr	r1, [r0, #8]
 8000704:	9301      	str	r3, [sp, #4]
 8000706:	f000 f9e9 	bl	8000adc <_vfiprintf_r>
 800070a:	b003      	add	sp, #12
 800070c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000710:	b004      	add	sp, #16
 8000712:	4770      	bx	lr
 8000714:	20000058 	.word	0x20000058

08000718 <__sread>:
 8000718:	b510      	push	{r4, lr}
 800071a:	460c      	mov	r4, r1
 800071c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000720:	f000 f868 	bl	80007f4 <_read_r>
 8000724:	2800      	cmp	r0, #0
 8000726:	bfab      	itete	ge
 8000728:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800072a:	89a3      	ldrhlt	r3, [r4, #12]
 800072c:	181b      	addge	r3, r3, r0
 800072e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000732:	bfac      	ite	ge
 8000734:	6563      	strge	r3, [r4, #84]	; 0x54
 8000736:	81a3      	strhlt	r3, [r4, #12]
 8000738:	bd10      	pop	{r4, pc}

0800073a <__swrite>:
 800073a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800073e:	461f      	mov	r7, r3
 8000740:	898b      	ldrh	r3, [r1, #12]
 8000742:	05db      	lsls	r3, r3, #23
 8000744:	4605      	mov	r5, r0
 8000746:	460c      	mov	r4, r1
 8000748:	4616      	mov	r6, r2
 800074a:	d505      	bpl.n	8000758 <__swrite+0x1e>
 800074c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000750:	2302      	movs	r3, #2
 8000752:	2200      	movs	r2, #0
 8000754:	f000 f83c 	bl	80007d0 <_lseek_r>
 8000758:	89a3      	ldrh	r3, [r4, #12]
 800075a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800075e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000762:	81a3      	strh	r3, [r4, #12]
 8000764:	4632      	mov	r2, r6
 8000766:	463b      	mov	r3, r7
 8000768:	4628      	mov	r0, r5
 800076a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800076e:	f000 b853 	b.w	8000818 <_write_r>

08000772 <__sseek>:
 8000772:	b510      	push	{r4, lr}
 8000774:	460c      	mov	r4, r1
 8000776:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800077a:	f000 f829 	bl	80007d0 <_lseek_r>
 800077e:	1c43      	adds	r3, r0, #1
 8000780:	89a3      	ldrh	r3, [r4, #12]
 8000782:	bf15      	itete	ne
 8000784:	6560      	strne	r0, [r4, #84]	; 0x54
 8000786:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800078a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800078e:	81a3      	strheq	r3, [r4, #12]
 8000790:	bf18      	it	ne
 8000792:	81a3      	strhne	r3, [r4, #12]
 8000794:	bd10      	pop	{r4, pc}

08000796 <__sclose>:
 8000796:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800079a:	f000 b809 	b.w	80007b0 <_close_r>

0800079e <memset>:
 800079e:	4402      	add	r2, r0
 80007a0:	4603      	mov	r3, r0
 80007a2:	4293      	cmp	r3, r2
 80007a4:	d100      	bne.n	80007a8 <memset+0xa>
 80007a6:	4770      	bx	lr
 80007a8:	f803 1b01 	strb.w	r1, [r3], #1
 80007ac:	e7f9      	b.n	80007a2 <memset+0x4>
	...

080007b0 <_close_r>:
 80007b0:	b538      	push	{r3, r4, r5, lr}
 80007b2:	4d06      	ldr	r5, [pc, #24]	; (80007cc <_close_r+0x1c>)
 80007b4:	2300      	movs	r3, #0
 80007b6:	4604      	mov	r4, r0
 80007b8:	4608      	mov	r0, r1
 80007ba:	602b      	str	r3, [r5, #0]
 80007bc:	f7ff fdbb 	bl	8000336 <_close>
 80007c0:	1c43      	adds	r3, r0, #1
 80007c2:	d102      	bne.n	80007ca <_close_r+0x1a>
 80007c4:	682b      	ldr	r3, [r5, #0]
 80007c6:	b103      	cbz	r3, 80007ca <_close_r+0x1a>
 80007c8:	6023      	str	r3, [r4, #0]
 80007ca:	bd38      	pop	{r3, r4, r5, pc}
 80007cc:	200001b8 	.word	0x200001b8

080007d0 <_lseek_r>:
 80007d0:	b538      	push	{r3, r4, r5, lr}
 80007d2:	4d07      	ldr	r5, [pc, #28]	; (80007f0 <_lseek_r+0x20>)
 80007d4:	4604      	mov	r4, r0
 80007d6:	4608      	mov	r0, r1
 80007d8:	4611      	mov	r1, r2
 80007da:	2200      	movs	r2, #0
 80007dc:	602a      	str	r2, [r5, #0]
 80007de:	461a      	mov	r2, r3
 80007e0:	f7ff fdd0 	bl	8000384 <_lseek>
 80007e4:	1c43      	adds	r3, r0, #1
 80007e6:	d102      	bne.n	80007ee <_lseek_r+0x1e>
 80007e8:	682b      	ldr	r3, [r5, #0]
 80007ea:	b103      	cbz	r3, 80007ee <_lseek_r+0x1e>
 80007ec:	6023      	str	r3, [r4, #0]
 80007ee:	bd38      	pop	{r3, r4, r5, pc}
 80007f0:	200001b8 	.word	0x200001b8

080007f4 <_read_r>:
 80007f4:	b538      	push	{r3, r4, r5, lr}
 80007f6:	4d07      	ldr	r5, [pc, #28]	; (8000814 <_read_r+0x20>)
 80007f8:	4604      	mov	r4, r0
 80007fa:	4608      	mov	r0, r1
 80007fc:	4611      	mov	r1, r2
 80007fe:	2200      	movs	r2, #0
 8000800:	602a      	str	r2, [r5, #0]
 8000802:	461a      	mov	r2, r3
 8000804:	f7ff fd5e 	bl	80002c4 <_read>
 8000808:	1c43      	adds	r3, r0, #1
 800080a:	d102      	bne.n	8000812 <_read_r+0x1e>
 800080c:	682b      	ldr	r3, [r5, #0]
 800080e:	b103      	cbz	r3, 8000812 <_read_r+0x1e>
 8000810:	6023      	str	r3, [r4, #0]
 8000812:	bd38      	pop	{r3, r4, r5, pc}
 8000814:	200001b8 	.word	0x200001b8

08000818 <_write_r>:
 8000818:	b538      	push	{r3, r4, r5, lr}
 800081a:	4d07      	ldr	r5, [pc, #28]	; (8000838 <_write_r+0x20>)
 800081c:	4604      	mov	r4, r0
 800081e:	4608      	mov	r0, r1
 8000820:	4611      	mov	r1, r2
 8000822:	2200      	movs	r2, #0
 8000824:	602a      	str	r2, [r5, #0]
 8000826:	461a      	mov	r2, r3
 8000828:	f7ff fd69 	bl	80002fe <_write>
 800082c:	1c43      	adds	r3, r0, #1
 800082e:	d102      	bne.n	8000836 <_write_r+0x1e>
 8000830:	682b      	ldr	r3, [r5, #0]
 8000832:	b103      	cbz	r3, 8000836 <_write_r+0x1e>
 8000834:	6023      	str	r3, [r4, #0]
 8000836:	bd38      	pop	{r3, r4, r5, pc}
 8000838:	200001b8 	.word	0x200001b8

0800083c <__errno>:
 800083c:	4b01      	ldr	r3, [pc, #4]	; (8000844 <__errno+0x8>)
 800083e:	6818      	ldr	r0, [r3, #0]
 8000840:	4770      	bx	lr
 8000842:	bf00      	nop
 8000844:	20000058 	.word	0x20000058

08000848 <__libc_init_array>:
 8000848:	b570      	push	{r4, r5, r6, lr}
 800084a:	4d0d      	ldr	r5, [pc, #52]	; (8000880 <__libc_init_array+0x38>)
 800084c:	4c0d      	ldr	r4, [pc, #52]	; (8000884 <__libc_init_array+0x3c>)
 800084e:	1b64      	subs	r4, r4, r5
 8000850:	10a4      	asrs	r4, r4, #2
 8000852:	2600      	movs	r6, #0
 8000854:	42a6      	cmp	r6, r4
 8000856:	d109      	bne.n	800086c <__libc_init_array+0x24>
 8000858:	4d0b      	ldr	r5, [pc, #44]	; (8000888 <__libc_init_array+0x40>)
 800085a:	4c0c      	ldr	r4, [pc, #48]	; (800088c <__libc_init_array+0x44>)
 800085c:	f000 fdc0 	bl	80013e0 <_init>
 8000860:	1b64      	subs	r4, r4, r5
 8000862:	10a4      	asrs	r4, r4, #2
 8000864:	2600      	movs	r6, #0
 8000866:	42a6      	cmp	r6, r4
 8000868:	d105      	bne.n	8000876 <__libc_init_array+0x2e>
 800086a:	bd70      	pop	{r4, r5, r6, pc}
 800086c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000870:	4798      	blx	r3
 8000872:	3601      	adds	r6, #1
 8000874:	e7ee      	b.n	8000854 <__libc_init_array+0xc>
 8000876:	f855 3b04 	ldr.w	r3, [r5], #4
 800087a:	4798      	blx	r3
 800087c:	3601      	adds	r6, #1
 800087e:	e7f2      	b.n	8000866 <__libc_init_array+0x1e>
 8000880:	08001440 	.word	0x08001440
 8000884:	08001440 	.word	0x08001440
 8000888:	08001440 	.word	0x08001440
 800088c:	08001444 	.word	0x08001444

08000890 <__retarget_lock_init_recursive>:
 8000890:	4770      	bx	lr

08000892 <__retarget_lock_acquire_recursive>:
 8000892:	4770      	bx	lr

08000894 <__retarget_lock_release_recursive>:
 8000894:	4770      	bx	lr
	...

08000898 <_free_r>:
 8000898:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800089a:	2900      	cmp	r1, #0
 800089c:	d044      	beq.n	8000928 <_free_r+0x90>
 800089e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80008a2:	9001      	str	r0, [sp, #4]
 80008a4:	2b00      	cmp	r3, #0
 80008a6:	f1a1 0404 	sub.w	r4, r1, #4
 80008aa:	bfb8      	it	lt
 80008ac:	18e4      	addlt	r4, r4, r3
 80008ae:	f000 f8df 	bl	8000a70 <__malloc_lock>
 80008b2:	4a1e      	ldr	r2, [pc, #120]	; (800092c <_free_r+0x94>)
 80008b4:	9801      	ldr	r0, [sp, #4]
 80008b6:	6813      	ldr	r3, [r2, #0]
 80008b8:	b933      	cbnz	r3, 80008c8 <_free_r+0x30>
 80008ba:	6063      	str	r3, [r4, #4]
 80008bc:	6014      	str	r4, [r2, #0]
 80008be:	b003      	add	sp, #12
 80008c0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80008c4:	f000 b8da 	b.w	8000a7c <__malloc_unlock>
 80008c8:	42a3      	cmp	r3, r4
 80008ca:	d908      	bls.n	80008de <_free_r+0x46>
 80008cc:	6825      	ldr	r5, [r4, #0]
 80008ce:	1961      	adds	r1, r4, r5
 80008d0:	428b      	cmp	r3, r1
 80008d2:	bf01      	itttt	eq
 80008d4:	6819      	ldreq	r1, [r3, #0]
 80008d6:	685b      	ldreq	r3, [r3, #4]
 80008d8:	1949      	addeq	r1, r1, r5
 80008da:	6021      	streq	r1, [r4, #0]
 80008dc:	e7ed      	b.n	80008ba <_free_r+0x22>
 80008de:	461a      	mov	r2, r3
 80008e0:	685b      	ldr	r3, [r3, #4]
 80008e2:	b10b      	cbz	r3, 80008e8 <_free_r+0x50>
 80008e4:	42a3      	cmp	r3, r4
 80008e6:	d9fa      	bls.n	80008de <_free_r+0x46>
 80008e8:	6811      	ldr	r1, [r2, #0]
 80008ea:	1855      	adds	r5, r2, r1
 80008ec:	42a5      	cmp	r5, r4
 80008ee:	d10b      	bne.n	8000908 <_free_r+0x70>
 80008f0:	6824      	ldr	r4, [r4, #0]
 80008f2:	4421      	add	r1, r4
 80008f4:	1854      	adds	r4, r2, r1
 80008f6:	42a3      	cmp	r3, r4
 80008f8:	6011      	str	r1, [r2, #0]
 80008fa:	d1e0      	bne.n	80008be <_free_r+0x26>
 80008fc:	681c      	ldr	r4, [r3, #0]
 80008fe:	685b      	ldr	r3, [r3, #4]
 8000900:	6053      	str	r3, [r2, #4]
 8000902:	440c      	add	r4, r1
 8000904:	6014      	str	r4, [r2, #0]
 8000906:	e7da      	b.n	80008be <_free_r+0x26>
 8000908:	d902      	bls.n	8000910 <_free_r+0x78>
 800090a:	230c      	movs	r3, #12
 800090c:	6003      	str	r3, [r0, #0]
 800090e:	e7d6      	b.n	80008be <_free_r+0x26>
 8000910:	6825      	ldr	r5, [r4, #0]
 8000912:	1961      	adds	r1, r4, r5
 8000914:	428b      	cmp	r3, r1
 8000916:	bf04      	itt	eq
 8000918:	6819      	ldreq	r1, [r3, #0]
 800091a:	685b      	ldreq	r3, [r3, #4]
 800091c:	6063      	str	r3, [r4, #4]
 800091e:	bf04      	itt	eq
 8000920:	1949      	addeq	r1, r1, r5
 8000922:	6021      	streq	r1, [r4, #0]
 8000924:	6054      	str	r4, [r2, #4]
 8000926:	e7ca      	b.n	80008be <_free_r+0x26>
 8000928:	b003      	add	sp, #12
 800092a:	bd30      	pop	{r4, r5, pc}
 800092c:	200001c0 	.word	0x200001c0

08000930 <sbrk_aligned>:
 8000930:	b570      	push	{r4, r5, r6, lr}
 8000932:	4e0e      	ldr	r6, [pc, #56]	; (800096c <sbrk_aligned+0x3c>)
 8000934:	460c      	mov	r4, r1
 8000936:	6831      	ldr	r1, [r6, #0]
 8000938:	4605      	mov	r5, r0
 800093a:	b911      	cbnz	r1, 8000942 <sbrk_aligned+0x12>
 800093c:	f000 fcbc 	bl	80012b8 <_sbrk_r>
 8000940:	6030      	str	r0, [r6, #0]
 8000942:	4621      	mov	r1, r4
 8000944:	4628      	mov	r0, r5
 8000946:	f000 fcb7 	bl	80012b8 <_sbrk_r>
 800094a:	1c43      	adds	r3, r0, #1
 800094c:	d00a      	beq.n	8000964 <sbrk_aligned+0x34>
 800094e:	1cc4      	adds	r4, r0, #3
 8000950:	f024 0403 	bic.w	r4, r4, #3
 8000954:	42a0      	cmp	r0, r4
 8000956:	d007      	beq.n	8000968 <sbrk_aligned+0x38>
 8000958:	1a21      	subs	r1, r4, r0
 800095a:	4628      	mov	r0, r5
 800095c:	f000 fcac 	bl	80012b8 <_sbrk_r>
 8000960:	3001      	adds	r0, #1
 8000962:	d101      	bne.n	8000968 <sbrk_aligned+0x38>
 8000964:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000968:	4620      	mov	r0, r4
 800096a:	bd70      	pop	{r4, r5, r6, pc}
 800096c:	200001c4 	.word	0x200001c4

08000970 <_malloc_r>:
 8000970:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000974:	1ccd      	adds	r5, r1, #3
 8000976:	f025 0503 	bic.w	r5, r5, #3
 800097a:	3508      	adds	r5, #8
 800097c:	2d0c      	cmp	r5, #12
 800097e:	bf38      	it	cc
 8000980:	250c      	movcc	r5, #12
 8000982:	2d00      	cmp	r5, #0
 8000984:	4607      	mov	r7, r0
 8000986:	db01      	blt.n	800098c <_malloc_r+0x1c>
 8000988:	42a9      	cmp	r1, r5
 800098a:	d905      	bls.n	8000998 <_malloc_r+0x28>
 800098c:	230c      	movs	r3, #12
 800098e:	603b      	str	r3, [r7, #0]
 8000990:	2600      	movs	r6, #0
 8000992:	4630      	mov	r0, r6
 8000994:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000998:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000a6c <_malloc_r+0xfc>
 800099c:	f000 f868 	bl	8000a70 <__malloc_lock>
 80009a0:	f8d8 3000 	ldr.w	r3, [r8]
 80009a4:	461c      	mov	r4, r3
 80009a6:	bb5c      	cbnz	r4, 8000a00 <_malloc_r+0x90>
 80009a8:	4629      	mov	r1, r5
 80009aa:	4638      	mov	r0, r7
 80009ac:	f7ff ffc0 	bl	8000930 <sbrk_aligned>
 80009b0:	1c43      	adds	r3, r0, #1
 80009b2:	4604      	mov	r4, r0
 80009b4:	d155      	bne.n	8000a62 <_malloc_r+0xf2>
 80009b6:	f8d8 4000 	ldr.w	r4, [r8]
 80009ba:	4626      	mov	r6, r4
 80009bc:	2e00      	cmp	r6, #0
 80009be:	d145      	bne.n	8000a4c <_malloc_r+0xdc>
 80009c0:	2c00      	cmp	r4, #0
 80009c2:	d048      	beq.n	8000a56 <_malloc_r+0xe6>
 80009c4:	6823      	ldr	r3, [r4, #0]
 80009c6:	4631      	mov	r1, r6
 80009c8:	4638      	mov	r0, r7
 80009ca:	eb04 0903 	add.w	r9, r4, r3
 80009ce:	f000 fc73 	bl	80012b8 <_sbrk_r>
 80009d2:	4581      	cmp	r9, r0
 80009d4:	d13f      	bne.n	8000a56 <_malloc_r+0xe6>
 80009d6:	6821      	ldr	r1, [r4, #0]
 80009d8:	1a6d      	subs	r5, r5, r1
 80009da:	4629      	mov	r1, r5
 80009dc:	4638      	mov	r0, r7
 80009de:	f7ff ffa7 	bl	8000930 <sbrk_aligned>
 80009e2:	3001      	adds	r0, #1
 80009e4:	d037      	beq.n	8000a56 <_malloc_r+0xe6>
 80009e6:	6823      	ldr	r3, [r4, #0]
 80009e8:	442b      	add	r3, r5
 80009ea:	6023      	str	r3, [r4, #0]
 80009ec:	f8d8 3000 	ldr.w	r3, [r8]
 80009f0:	2b00      	cmp	r3, #0
 80009f2:	d038      	beq.n	8000a66 <_malloc_r+0xf6>
 80009f4:	685a      	ldr	r2, [r3, #4]
 80009f6:	42a2      	cmp	r2, r4
 80009f8:	d12b      	bne.n	8000a52 <_malloc_r+0xe2>
 80009fa:	2200      	movs	r2, #0
 80009fc:	605a      	str	r2, [r3, #4]
 80009fe:	e00f      	b.n	8000a20 <_malloc_r+0xb0>
 8000a00:	6822      	ldr	r2, [r4, #0]
 8000a02:	1b52      	subs	r2, r2, r5
 8000a04:	d41f      	bmi.n	8000a46 <_malloc_r+0xd6>
 8000a06:	2a0b      	cmp	r2, #11
 8000a08:	d917      	bls.n	8000a3a <_malloc_r+0xca>
 8000a0a:	1961      	adds	r1, r4, r5
 8000a0c:	42a3      	cmp	r3, r4
 8000a0e:	6025      	str	r5, [r4, #0]
 8000a10:	bf18      	it	ne
 8000a12:	6059      	strne	r1, [r3, #4]
 8000a14:	6863      	ldr	r3, [r4, #4]
 8000a16:	bf08      	it	eq
 8000a18:	f8c8 1000 	streq.w	r1, [r8]
 8000a1c:	5162      	str	r2, [r4, r5]
 8000a1e:	604b      	str	r3, [r1, #4]
 8000a20:	4638      	mov	r0, r7
 8000a22:	f104 060b 	add.w	r6, r4, #11
 8000a26:	f000 f829 	bl	8000a7c <__malloc_unlock>
 8000a2a:	f026 0607 	bic.w	r6, r6, #7
 8000a2e:	1d23      	adds	r3, r4, #4
 8000a30:	1af2      	subs	r2, r6, r3
 8000a32:	d0ae      	beq.n	8000992 <_malloc_r+0x22>
 8000a34:	1b9b      	subs	r3, r3, r6
 8000a36:	50a3      	str	r3, [r4, r2]
 8000a38:	e7ab      	b.n	8000992 <_malloc_r+0x22>
 8000a3a:	42a3      	cmp	r3, r4
 8000a3c:	6862      	ldr	r2, [r4, #4]
 8000a3e:	d1dd      	bne.n	80009fc <_malloc_r+0x8c>
 8000a40:	f8c8 2000 	str.w	r2, [r8]
 8000a44:	e7ec      	b.n	8000a20 <_malloc_r+0xb0>
 8000a46:	4623      	mov	r3, r4
 8000a48:	6864      	ldr	r4, [r4, #4]
 8000a4a:	e7ac      	b.n	80009a6 <_malloc_r+0x36>
 8000a4c:	4634      	mov	r4, r6
 8000a4e:	6876      	ldr	r6, [r6, #4]
 8000a50:	e7b4      	b.n	80009bc <_malloc_r+0x4c>
 8000a52:	4613      	mov	r3, r2
 8000a54:	e7cc      	b.n	80009f0 <_malloc_r+0x80>
 8000a56:	230c      	movs	r3, #12
 8000a58:	603b      	str	r3, [r7, #0]
 8000a5a:	4638      	mov	r0, r7
 8000a5c:	f000 f80e 	bl	8000a7c <__malloc_unlock>
 8000a60:	e797      	b.n	8000992 <_malloc_r+0x22>
 8000a62:	6025      	str	r5, [r4, #0]
 8000a64:	e7dc      	b.n	8000a20 <_malloc_r+0xb0>
 8000a66:	605b      	str	r3, [r3, #4]
 8000a68:	deff      	udf	#255	; 0xff
 8000a6a:	bf00      	nop
 8000a6c:	200001c0 	.word	0x200001c0

08000a70 <__malloc_lock>:
 8000a70:	4801      	ldr	r0, [pc, #4]	; (8000a78 <__malloc_lock+0x8>)
 8000a72:	f7ff bf0e 	b.w	8000892 <__retarget_lock_acquire_recursive>
 8000a76:	bf00      	nop
 8000a78:	200001bc 	.word	0x200001bc

08000a7c <__malloc_unlock>:
 8000a7c:	4801      	ldr	r0, [pc, #4]	; (8000a84 <__malloc_unlock+0x8>)
 8000a7e:	f7ff bf09 	b.w	8000894 <__retarget_lock_release_recursive>
 8000a82:	bf00      	nop
 8000a84:	200001bc 	.word	0x200001bc

08000a88 <__sfputc_r>:
 8000a88:	6893      	ldr	r3, [r2, #8]
 8000a8a:	3b01      	subs	r3, #1
 8000a8c:	2b00      	cmp	r3, #0
 8000a8e:	b410      	push	{r4}
 8000a90:	6093      	str	r3, [r2, #8]
 8000a92:	da08      	bge.n	8000aa6 <__sfputc_r+0x1e>
 8000a94:	6994      	ldr	r4, [r2, #24]
 8000a96:	42a3      	cmp	r3, r4
 8000a98:	db01      	blt.n	8000a9e <__sfputc_r+0x16>
 8000a9a:	290a      	cmp	r1, #10
 8000a9c:	d103      	bne.n	8000aa6 <__sfputc_r+0x1e>
 8000a9e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000aa2:	f000 bb73 	b.w	800118c <__swbuf_r>
 8000aa6:	6813      	ldr	r3, [r2, #0]
 8000aa8:	1c58      	adds	r0, r3, #1
 8000aaa:	6010      	str	r0, [r2, #0]
 8000aac:	7019      	strb	r1, [r3, #0]
 8000aae:	4608      	mov	r0, r1
 8000ab0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ab4:	4770      	bx	lr

08000ab6 <__sfputs_r>:
 8000ab6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ab8:	4606      	mov	r6, r0
 8000aba:	460f      	mov	r7, r1
 8000abc:	4614      	mov	r4, r2
 8000abe:	18d5      	adds	r5, r2, r3
 8000ac0:	42ac      	cmp	r4, r5
 8000ac2:	d101      	bne.n	8000ac8 <__sfputs_r+0x12>
 8000ac4:	2000      	movs	r0, #0
 8000ac6:	e007      	b.n	8000ad8 <__sfputs_r+0x22>
 8000ac8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000acc:	463a      	mov	r2, r7
 8000ace:	4630      	mov	r0, r6
 8000ad0:	f7ff ffda 	bl	8000a88 <__sfputc_r>
 8000ad4:	1c43      	adds	r3, r0, #1
 8000ad6:	d1f3      	bne.n	8000ac0 <__sfputs_r+0xa>
 8000ad8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000adc <_vfiprintf_r>:
 8000adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000ae0:	460d      	mov	r5, r1
 8000ae2:	b09d      	sub	sp, #116	; 0x74
 8000ae4:	4614      	mov	r4, r2
 8000ae6:	4698      	mov	r8, r3
 8000ae8:	4606      	mov	r6, r0
 8000aea:	b118      	cbz	r0, 8000af4 <_vfiprintf_r+0x18>
 8000aec:	6a03      	ldr	r3, [r0, #32]
 8000aee:	b90b      	cbnz	r3, 8000af4 <_vfiprintf_r+0x18>
 8000af0:	f7ff fdca 	bl	8000688 <__sinit>
 8000af4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000af6:	07d9      	lsls	r1, r3, #31
 8000af8:	d405      	bmi.n	8000b06 <_vfiprintf_r+0x2a>
 8000afa:	89ab      	ldrh	r3, [r5, #12]
 8000afc:	059a      	lsls	r2, r3, #22
 8000afe:	d402      	bmi.n	8000b06 <_vfiprintf_r+0x2a>
 8000b00:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b02:	f7ff fec6 	bl	8000892 <__retarget_lock_acquire_recursive>
 8000b06:	89ab      	ldrh	r3, [r5, #12]
 8000b08:	071b      	lsls	r3, r3, #28
 8000b0a:	d501      	bpl.n	8000b10 <_vfiprintf_r+0x34>
 8000b0c:	692b      	ldr	r3, [r5, #16]
 8000b0e:	b99b      	cbnz	r3, 8000b38 <_vfiprintf_r+0x5c>
 8000b10:	4629      	mov	r1, r5
 8000b12:	4630      	mov	r0, r6
 8000b14:	f000 fb78 	bl	8001208 <__swsetup_r>
 8000b18:	b170      	cbz	r0, 8000b38 <_vfiprintf_r+0x5c>
 8000b1a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b1c:	07dc      	lsls	r4, r3, #31
 8000b1e:	d504      	bpl.n	8000b2a <_vfiprintf_r+0x4e>
 8000b20:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000b24:	b01d      	add	sp, #116	; 0x74
 8000b26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b2a:	89ab      	ldrh	r3, [r5, #12]
 8000b2c:	0598      	lsls	r0, r3, #22
 8000b2e:	d4f7      	bmi.n	8000b20 <_vfiprintf_r+0x44>
 8000b30:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b32:	f7ff feaf 	bl	8000894 <__retarget_lock_release_recursive>
 8000b36:	e7f3      	b.n	8000b20 <_vfiprintf_r+0x44>
 8000b38:	2300      	movs	r3, #0
 8000b3a:	9309      	str	r3, [sp, #36]	; 0x24
 8000b3c:	2320      	movs	r3, #32
 8000b3e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000b42:	f8cd 800c 	str.w	r8, [sp, #12]
 8000b46:	2330      	movs	r3, #48	; 0x30
 8000b48:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000cfc <_vfiprintf_r+0x220>
 8000b4c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000b50:	f04f 0901 	mov.w	r9, #1
 8000b54:	4623      	mov	r3, r4
 8000b56:	469a      	mov	sl, r3
 8000b58:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b5c:	b10a      	cbz	r2, 8000b62 <_vfiprintf_r+0x86>
 8000b5e:	2a25      	cmp	r2, #37	; 0x25
 8000b60:	d1f9      	bne.n	8000b56 <_vfiprintf_r+0x7a>
 8000b62:	ebba 0b04 	subs.w	fp, sl, r4
 8000b66:	d00b      	beq.n	8000b80 <_vfiprintf_r+0xa4>
 8000b68:	465b      	mov	r3, fp
 8000b6a:	4622      	mov	r2, r4
 8000b6c:	4629      	mov	r1, r5
 8000b6e:	4630      	mov	r0, r6
 8000b70:	f7ff ffa1 	bl	8000ab6 <__sfputs_r>
 8000b74:	3001      	adds	r0, #1
 8000b76:	f000 80a9 	beq.w	8000ccc <_vfiprintf_r+0x1f0>
 8000b7a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000b7c:	445a      	add	r2, fp
 8000b7e:	9209      	str	r2, [sp, #36]	; 0x24
 8000b80:	f89a 3000 	ldrb.w	r3, [sl]
 8000b84:	2b00      	cmp	r3, #0
 8000b86:	f000 80a1 	beq.w	8000ccc <_vfiprintf_r+0x1f0>
 8000b8a:	2300      	movs	r3, #0
 8000b8c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000b90:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b94:	f10a 0a01 	add.w	sl, sl, #1
 8000b98:	9304      	str	r3, [sp, #16]
 8000b9a:	9307      	str	r3, [sp, #28]
 8000b9c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000ba0:	931a      	str	r3, [sp, #104]	; 0x68
 8000ba2:	4654      	mov	r4, sl
 8000ba4:	2205      	movs	r2, #5
 8000ba6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000baa:	4854      	ldr	r0, [pc, #336]	; (8000cfc <_vfiprintf_r+0x220>)
 8000bac:	f7ff fb30 	bl	8000210 <memchr>
 8000bb0:	9a04      	ldr	r2, [sp, #16]
 8000bb2:	b9d8      	cbnz	r0, 8000bec <_vfiprintf_r+0x110>
 8000bb4:	06d1      	lsls	r1, r2, #27
 8000bb6:	bf44      	itt	mi
 8000bb8:	2320      	movmi	r3, #32
 8000bba:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000bbe:	0713      	lsls	r3, r2, #28
 8000bc0:	bf44      	itt	mi
 8000bc2:	232b      	movmi	r3, #43	; 0x2b
 8000bc4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000bc8:	f89a 3000 	ldrb.w	r3, [sl]
 8000bcc:	2b2a      	cmp	r3, #42	; 0x2a
 8000bce:	d015      	beq.n	8000bfc <_vfiprintf_r+0x120>
 8000bd0:	9a07      	ldr	r2, [sp, #28]
 8000bd2:	4654      	mov	r4, sl
 8000bd4:	2000      	movs	r0, #0
 8000bd6:	f04f 0c0a 	mov.w	ip, #10
 8000bda:	4621      	mov	r1, r4
 8000bdc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000be0:	3b30      	subs	r3, #48	; 0x30
 8000be2:	2b09      	cmp	r3, #9
 8000be4:	d94d      	bls.n	8000c82 <_vfiprintf_r+0x1a6>
 8000be6:	b1b0      	cbz	r0, 8000c16 <_vfiprintf_r+0x13a>
 8000be8:	9207      	str	r2, [sp, #28]
 8000bea:	e014      	b.n	8000c16 <_vfiprintf_r+0x13a>
 8000bec:	eba0 0308 	sub.w	r3, r0, r8
 8000bf0:	fa09 f303 	lsl.w	r3, r9, r3
 8000bf4:	4313      	orrs	r3, r2
 8000bf6:	9304      	str	r3, [sp, #16]
 8000bf8:	46a2      	mov	sl, r4
 8000bfa:	e7d2      	b.n	8000ba2 <_vfiprintf_r+0xc6>
 8000bfc:	9b03      	ldr	r3, [sp, #12]
 8000bfe:	1d19      	adds	r1, r3, #4
 8000c00:	681b      	ldr	r3, [r3, #0]
 8000c02:	9103      	str	r1, [sp, #12]
 8000c04:	2b00      	cmp	r3, #0
 8000c06:	bfbb      	ittet	lt
 8000c08:	425b      	neglt	r3, r3
 8000c0a:	f042 0202 	orrlt.w	r2, r2, #2
 8000c0e:	9307      	strge	r3, [sp, #28]
 8000c10:	9307      	strlt	r3, [sp, #28]
 8000c12:	bfb8      	it	lt
 8000c14:	9204      	strlt	r2, [sp, #16]
 8000c16:	7823      	ldrb	r3, [r4, #0]
 8000c18:	2b2e      	cmp	r3, #46	; 0x2e
 8000c1a:	d10c      	bne.n	8000c36 <_vfiprintf_r+0x15a>
 8000c1c:	7863      	ldrb	r3, [r4, #1]
 8000c1e:	2b2a      	cmp	r3, #42	; 0x2a
 8000c20:	d134      	bne.n	8000c8c <_vfiprintf_r+0x1b0>
 8000c22:	9b03      	ldr	r3, [sp, #12]
 8000c24:	1d1a      	adds	r2, r3, #4
 8000c26:	681b      	ldr	r3, [r3, #0]
 8000c28:	9203      	str	r2, [sp, #12]
 8000c2a:	2b00      	cmp	r3, #0
 8000c2c:	bfb8      	it	lt
 8000c2e:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000c32:	3402      	adds	r4, #2
 8000c34:	9305      	str	r3, [sp, #20]
 8000c36:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000d0c <_vfiprintf_r+0x230>
 8000c3a:	7821      	ldrb	r1, [r4, #0]
 8000c3c:	2203      	movs	r2, #3
 8000c3e:	4650      	mov	r0, sl
 8000c40:	f7ff fae6 	bl	8000210 <memchr>
 8000c44:	b138      	cbz	r0, 8000c56 <_vfiprintf_r+0x17a>
 8000c46:	9b04      	ldr	r3, [sp, #16]
 8000c48:	eba0 000a 	sub.w	r0, r0, sl
 8000c4c:	2240      	movs	r2, #64	; 0x40
 8000c4e:	4082      	lsls	r2, r0
 8000c50:	4313      	orrs	r3, r2
 8000c52:	3401      	adds	r4, #1
 8000c54:	9304      	str	r3, [sp, #16]
 8000c56:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c5a:	4829      	ldr	r0, [pc, #164]	; (8000d00 <_vfiprintf_r+0x224>)
 8000c5c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000c60:	2206      	movs	r2, #6
 8000c62:	f7ff fad5 	bl	8000210 <memchr>
 8000c66:	2800      	cmp	r0, #0
 8000c68:	d03f      	beq.n	8000cea <_vfiprintf_r+0x20e>
 8000c6a:	4b26      	ldr	r3, [pc, #152]	; (8000d04 <_vfiprintf_r+0x228>)
 8000c6c:	bb1b      	cbnz	r3, 8000cb6 <_vfiprintf_r+0x1da>
 8000c6e:	9b03      	ldr	r3, [sp, #12]
 8000c70:	3307      	adds	r3, #7
 8000c72:	f023 0307 	bic.w	r3, r3, #7
 8000c76:	3308      	adds	r3, #8
 8000c78:	9303      	str	r3, [sp, #12]
 8000c7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000c7c:	443b      	add	r3, r7
 8000c7e:	9309      	str	r3, [sp, #36]	; 0x24
 8000c80:	e768      	b.n	8000b54 <_vfiprintf_r+0x78>
 8000c82:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c86:	460c      	mov	r4, r1
 8000c88:	2001      	movs	r0, #1
 8000c8a:	e7a6      	b.n	8000bda <_vfiprintf_r+0xfe>
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	3401      	adds	r4, #1
 8000c90:	9305      	str	r3, [sp, #20]
 8000c92:	4619      	mov	r1, r3
 8000c94:	f04f 0c0a 	mov.w	ip, #10
 8000c98:	4620      	mov	r0, r4
 8000c9a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c9e:	3a30      	subs	r2, #48	; 0x30
 8000ca0:	2a09      	cmp	r2, #9
 8000ca2:	d903      	bls.n	8000cac <_vfiprintf_r+0x1d0>
 8000ca4:	2b00      	cmp	r3, #0
 8000ca6:	d0c6      	beq.n	8000c36 <_vfiprintf_r+0x15a>
 8000ca8:	9105      	str	r1, [sp, #20]
 8000caa:	e7c4      	b.n	8000c36 <_vfiprintf_r+0x15a>
 8000cac:	fb0c 2101 	mla	r1, ip, r1, r2
 8000cb0:	4604      	mov	r4, r0
 8000cb2:	2301      	movs	r3, #1
 8000cb4:	e7f0      	b.n	8000c98 <_vfiprintf_r+0x1bc>
 8000cb6:	ab03      	add	r3, sp, #12
 8000cb8:	9300      	str	r3, [sp, #0]
 8000cba:	462a      	mov	r2, r5
 8000cbc:	4b12      	ldr	r3, [pc, #72]	; (8000d08 <_vfiprintf_r+0x22c>)
 8000cbe:	a904      	add	r1, sp, #16
 8000cc0:	4630      	mov	r0, r6
 8000cc2:	f3af 8000 	nop.w
 8000cc6:	4607      	mov	r7, r0
 8000cc8:	1c78      	adds	r0, r7, #1
 8000cca:	d1d6      	bne.n	8000c7a <_vfiprintf_r+0x19e>
 8000ccc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cce:	07d9      	lsls	r1, r3, #31
 8000cd0:	d405      	bmi.n	8000cde <_vfiprintf_r+0x202>
 8000cd2:	89ab      	ldrh	r3, [r5, #12]
 8000cd4:	059a      	lsls	r2, r3, #22
 8000cd6:	d402      	bmi.n	8000cde <_vfiprintf_r+0x202>
 8000cd8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000cda:	f7ff fddb 	bl	8000894 <__retarget_lock_release_recursive>
 8000cde:	89ab      	ldrh	r3, [r5, #12]
 8000ce0:	065b      	lsls	r3, r3, #25
 8000ce2:	f53f af1d 	bmi.w	8000b20 <_vfiprintf_r+0x44>
 8000ce6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000ce8:	e71c      	b.n	8000b24 <_vfiprintf_r+0x48>
 8000cea:	ab03      	add	r3, sp, #12
 8000cec:	9300      	str	r3, [sp, #0]
 8000cee:	462a      	mov	r2, r5
 8000cf0:	4b05      	ldr	r3, [pc, #20]	; (8000d08 <_vfiprintf_r+0x22c>)
 8000cf2:	a904      	add	r1, sp, #16
 8000cf4:	4630      	mov	r0, r6
 8000cf6:	f000 f879 	bl	8000dec <_printf_i>
 8000cfa:	e7e4      	b.n	8000cc6 <_vfiprintf_r+0x1ea>
 8000cfc:	0800140b 	.word	0x0800140b
 8000d00:	08001415 	.word	0x08001415
 8000d04:	00000000 	.word	0x00000000
 8000d08:	08000ab7 	.word	0x08000ab7
 8000d0c:	08001411 	.word	0x08001411

08000d10 <_printf_common>:
 8000d10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d14:	4616      	mov	r6, r2
 8000d16:	4699      	mov	r9, r3
 8000d18:	688a      	ldr	r2, [r1, #8]
 8000d1a:	690b      	ldr	r3, [r1, #16]
 8000d1c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000d20:	4293      	cmp	r3, r2
 8000d22:	bfb8      	it	lt
 8000d24:	4613      	movlt	r3, r2
 8000d26:	6033      	str	r3, [r6, #0]
 8000d28:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000d2c:	4607      	mov	r7, r0
 8000d2e:	460c      	mov	r4, r1
 8000d30:	b10a      	cbz	r2, 8000d36 <_printf_common+0x26>
 8000d32:	3301      	adds	r3, #1
 8000d34:	6033      	str	r3, [r6, #0]
 8000d36:	6823      	ldr	r3, [r4, #0]
 8000d38:	0699      	lsls	r1, r3, #26
 8000d3a:	bf42      	ittt	mi
 8000d3c:	6833      	ldrmi	r3, [r6, #0]
 8000d3e:	3302      	addmi	r3, #2
 8000d40:	6033      	strmi	r3, [r6, #0]
 8000d42:	6825      	ldr	r5, [r4, #0]
 8000d44:	f015 0506 	ands.w	r5, r5, #6
 8000d48:	d106      	bne.n	8000d58 <_printf_common+0x48>
 8000d4a:	f104 0a19 	add.w	sl, r4, #25
 8000d4e:	68e3      	ldr	r3, [r4, #12]
 8000d50:	6832      	ldr	r2, [r6, #0]
 8000d52:	1a9b      	subs	r3, r3, r2
 8000d54:	42ab      	cmp	r3, r5
 8000d56:	dc26      	bgt.n	8000da6 <_printf_common+0x96>
 8000d58:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000d5c:	1e13      	subs	r3, r2, #0
 8000d5e:	6822      	ldr	r2, [r4, #0]
 8000d60:	bf18      	it	ne
 8000d62:	2301      	movne	r3, #1
 8000d64:	0692      	lsls	r2, r2, #26
 8000d66:	d42b      	bmi.n	8000dc0 <_printf_common+0xb0>
 8000d68:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000d6c:	4649      	mov	r1, r9
 8000d6e:	4638      	mov	r0, r7
 8000d70:	47c0      	blx	r8
 8000d72:	3001      	adds	r0, #1
 8000d74:	d01e      	beq.n	8000db4 <_printf_common+0xa4>
 8000d76:	6823      	ldr	r3, [r4, #0]
 8000d78:	6922      	ldr	r2, [r4, #16]
 8000d7a:	f003 0306 	and.w	r3, r3, #6
 8000d7e:	2b04      	cmp	r3, #4
 8000d80:	bf02      	ittt	eq
 8000d82:	68e5      	ldreq	r5, [r4, #12]
 8000d84:	6833      	ldreq	r3, [r6, #0]
 8000d86:	1aed      	subeq	r5, r5, r3
 8000d88:	68a3      	ldr	r3, [r4, #8]
 8000d8a:	bf0c      	ite	eq
 8000d8c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d90:	2500      	movne	r5, #0
 8000d92:	4293      	cmp	r3, r2
 8000d94:	bfc4      	itt	gt
 8000d96:	1a9b      	subgt	r3, r3, r2
 8000d98:	18ed      	addgt	r5, r5, r3
 8000d9a:	2600      	movs	r6, #0
 8000d9c:	341a      	adds	r4, #26
 8000d9e:	42b5      	cmp	r5, r6
 8000da0:	d11a      	bne.n	8000dd8 <_printf_common+0xc8>
 8000da2:	2000      	movs	r0, #0
 8000da4:	e008      	b.n	8000db8 <_printf_common+0xa8>
 8000da6:	2301      	movs	r3, #1
 8000da8:	4652      	mov	r2, sl
 8000daa:	4649      	mov	r1, r9
 8000dac:	4638      	mov	r0, r7
 8000dae:	47c0      	blx	r8
 8000db0:	3001      	adds	r0, #1
 8000db2:	d103      	bne.n	8000dbc <_printf_common+0xac>
 8000db4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000db8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dbc:	3501      	adds	r5, #1
 8000dbe:	e7c6      	b.n	8000d4e <_printf_common+0x3e>
 8000dc0:	18e1      	adds	r1, r4, r3
 8000dc2:	1c5a      	adds	r2, r3, #1
 8000dc4:	2030      	movs	r0, #48	; 0x30
 8000dc6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000dca:	4422      	add	r2, r4
 8000dcc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000dd0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000dd4:	3302      	adds	r3, #2
 8000dd6:	e7c7      	b.n	8000d68 <_printf_common+0x58>
 8000dd8:	2301      	movs	r3, #1
 8000dda:	4622      	mov	r2, r4
 8000ddc:	4649      	mov	r1, r9
 8000dde:	4638      	mov	r0, r7
 8000de0:	47c0      	blx	r8
 8000de2:	3001      	adds	r0, #1
 8000de4:	d0e6      	beq.n	8000db4 <_printf_common+0xa4>
 8000de6:	3601      	adds	r6, #1
 8000de8:	e7d9      	b.n	8000d9e <_printf_common+0x8e>
	...

08000dec <_printf_i>:
 8000dec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000df0:	7e0f      	ldrb	r7, [r1, #24]
 8000df2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000df4:	2f78      	cmp	r7, #120	; 0x78
 8000df6:	4691      	mov	r9, r2
 8000df8:	4680      	mov	r8, r0
 8000dfa:	460c      	mov	r4, r1
 8000dfc:	469a      	mov	sl, r3
 8000dfe:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000e02:	d807      	bhi.n	8000e14 <_printf_i+0x28>
 8000e04:	2f62      	cmp	r7, #98	; 0x62
 8000e06:	d80a      	bhi.n	8000e1e <_printf_i+0x32>
 8000e08:	2f00      	cmp	r7, #0
 8000e0a:	f000 80d4 	beq.w	8000fb6 <_printf_i+0x1ca>
 8000e0e:	2f58      	cmp	r7, #88	; 0x58
 8000e10:	f000 80c0 	beq.w	8000f94 <_printf_i+0x1a8>
 8000e14:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e18:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000e1c:	e03a      	b.n	8000e94 <_printf_i+0xa8>
 8000e1e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000e22:	2b15      	cmp	r3, #21
 8000e24:	d8f6      	bhi.n	8000e14 <_printf_i+0x28>
 8000e26:	a101      	add	r1, pc, #4	; (adr r1, 8000e2c <_printf_i+0x40>)
 8000e28:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000e2c:	08000e85 	.word	0x08000e85
 8000e30:	08000e99 	.word	0x08000e99
 8000e34:	08000e15 	.word	0x08000e15
 8000e38:	08000e15 	.word	0x08000e15
 8000e3c:	08000e15 	.word	0x08000e15
 8000e40:	08000e15 	.word	0x08000e15
 8000e44:	08000e99 	.word	0x08000e99
 8000e48:	08000e15 	.word	0x08000e15
 8000e4c:	08000e15 	.word	0x08000e15
 8000e50:	08000e15 	.word	0x08000e15
 8000e54:	08000e15 	.word	0x08000e15
 8000e58:	08000f9d 	.word	0x08000f9d
 8000e5c:	08000ec5 	.word	0x08000ec5
 8000e60:	08000f57 	.word	0x08000f57
 8000e64:	08000e15 	.word	0x08000e15
 8000e68:	08000e15 	.word	0x08000e15
 8000e6c:	08000fbf 	.word	0x08000fbf
 8000e70:	08000e15 	.word	0x08000e15
 8000e74:	08000ec5 	.word	0x08000ec5
 8000e78:	08000e15 	.word	0x08000e15
 8000e7c:	08000e15 	.word	0x08000e15
 8000e80:	08000f5f 	.word	0x08000f5f
 8000e84:	682b      	ldr	r3, [r5, #0]
 8000e86:	1d1a      	adds	r2, r3, #4
 8000e88:	681b      	ldr	r3, [r3, #0]
 8000e8a:	602a      	str	r2, [r5, #0]
 8000e8c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e90:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e94:	2301      	movs	r3, #1
 8000e96:	e09f      	b.n	8000fd8 <_printf_i+0x1ec>
 8000e98:	6820      	ldr	r0, [r4, #0]
 8000e9a:	682b      	ldr	r3, [r5, #0]
 8000e9c:	0607      	lsls	r7, r0, #24
 8000e9e:	f103 0104 	add.w	r1, r3, #4
 8000ea2:	6029      	str	r1, [r5, #0]
 8000ea4:	d501      	bpl.n	8000eaa <_printf_i+0xbe>
 8000ea6:	681e      	ldr	r6, [r3, #0]
 8000ea8:	e003      	b.n	8000eb2 <_printf_i+0xc6>
 8000eaa:	0646      	lsls	r6, r0, #25
 8000eac:	d5fb      	bpl.n	8000ea6 <_printf_i+0xba>
 8000eae:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000eb2:	2e00      	cmp	r6, #0
 8000eb4:	da03      	bge.n	8000ebe <_printf_i+0xd2>
 8000eb6:	232d      	movs	r3, #45	; 0x2d
 8000eb8:	4276      	negs	r6, r6
 8000eba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ebe:	485a      	ldr	r0, [pc, #360]	; (8001028 <_printf_i+0x23c>)
 8000ec0:	230a      	movs	r3, #10
 8000ec2:	e012      	b.n	8000eea <_printf_i+0xfe>
 8000ec4:	682b      	ldr	r3, [r5, #0]
 8000ec6:	6820      	ldr	r0, [r4, #0]
 8000ec8:	1d19      	adds	r1, r3, #4
 8000eca:	6029      	str	r1, [r5, #0]
 8000ecc:	0605      	lsls	r5, r0, #24
 8000ece:	d501      	bpl.n	8000ed4 <_printf_i+0xe8>
 8000ed0:	681e      	ldr	r6, [r3, #0]
 8000ed2:	e002      	b.n	8000eda <_printf_i+0xee>
 8000ed4:	0641      	lsls	r1, r0, #25
 8000ed6:	d5fb      	bpl.n	8000ed0 <_printf_i+0xe4>
 8000ed8:	881e      	ldrh	r6, [r3, #0]
 8000eda:	4853      	ldr	r0, [pc, #332]	; (8001028 <_printf_i+0x23c>)
 8000edc:	2f6f      	cmp	r7, #111	; 0x6f
 8000ede:	bf0c      	ite	eq
 8000ee0:	2308      	moveq	r3, #8
 8000ee2:	230a      	movne	r3, #10
 8000ee4:	2100      	movs	r1, #0
 8000ee6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000eea:	6865      	ldr	r5, [r4, #4]
 8000eec:	60a5      	str	r5, [r4, #8]
 8000eee:	2d00      	cmp	r5, #0
 8000ef0:	bfa2      	ittt	ge
 8000ef2:	6821      	ldrge	r1, [r4, #0]
 8000ef4:	f021 0104 	bicge.w	r1, r1, #4
 8000ef8:	6021      	strge	r1, [r4, #0]
 8000efa:	b90e      	cbnz	r6, 8000f00 <_printf_i+0x114>
 8000efc:	2d00      	cmp	r5, #0
 8000efe:	d04b      	beq.n	8000f98 <_printf_i+0x1ac>
 8000f00:	4615      	mov	r5, r2
 8000f02:	fbb6 f1f3 	udiv	r1, r6, r3
 8000f06:	fb03 6711 	mls	r7, r3, r1, r6
 8000f0a:	5dc7      	ldrb	r7, [r0, r7]
 8000f0c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000f10:	4637      	mov	r7, r6
 8000f12:	42bb      	cmp	r3, r7
 8000f14:	460e      	mov	r6, r1
 8000f16:	d9f4      	bls.n	8000f02 <_printf_i+0x116>
 8000f18:	2b08      	cmp	r3, #8
 8000f1a:	d10b      	bne.n	8000f34 <_printf_i+0x148>
 8000f1c:	6823      	ldr	r3, [r4, #0]
 8000f1e:	07de      	lsls	r6, r3, #31
 8000f20:	d508      	bpl.n	8000f34 <_printf_i+0x148>
 8000f22:	6923      	ldr	r3, [r4, #16]
 8000f24:	6861      	ldr	r1, [r4, #4]
 8000f26:	4299      	cmp	r1, r3
 8000f28:	bfde      	ittt	le
 8000f2a:	2330      	movle	r3, #48	; 0x30
 8000f2c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000f30:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8000f34:	1b52      	subs	r2, r2, r5
 8000f36:	6122      	str	r2, [r4, #16]
 8000f38:	f8cd a000 	str.w	sl, [sp]
 8000f3c:	464b      	mov	r3, r9
 8000f3e:	aa03      	add	r2, sp, #12
 8000f40:	4621      	mov	r1, r4
 8000f42:	4640      	mov	r0, r8
 8000f44:	f7ff fee4 	bl	8000d10 <_printf_common>
 8000f48:	3001      	adds	r0, #1
 8000f4a:	d14a      	bne.n	8000fe2 <_printf_i+0x1f6>
 8000f4c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000f50:	b004      	add	sp, #16
 8000f52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f56:	6823      	ldr	r3, [r4, #0]
 8000f58:	f043 0320 	orr.w	r3, r3, #32
 8000f5c:	6023      	str	r3, [r4, #0]
 8000f5e:	4833      	ldr	r0, [pc, #204]	; (800102c <_printf_i+0x240>)
 8000f60:	2778      	movs	r7, #120	; 0x78
 8000f62:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000f66:	6823      	ldr	r3, [r4, #0]
 8000f68:	6829      	ldr	r1, [r5, #0]
 8000f6a:	061f      	lsls	r7, r3, #24
 8000f6c:	f851 6b04 	ldr.w	r6, [r1], #4
 8000f70:	d402      	bmi.n	8000f78 <_printf_i+0x18c>
 8000f72:	065f      	lsls	r7, r3, #25
 8000f74:	bf48      	it	mi
 8000f76:	b2b6      	uxthmi	r6, r6
 8000f78:	07df      	lsls	r7, r3, #31
 8000f7a:	bf48      	it	mi
 8000f7c:	f043 0320 	orrmi.w	r3, r3, #32
 8000f80:	6029      	str	r1, [r5, #0]
 8000f82:	bf48      	it	mi
 8000f84:	6023      	strmi	r3, [r4, #0]
 8000f86:	b91e      	cbnz	r6, 8000f90 <_printf_i+0x1a4>
 8000f88:	6823      	ldr	r3, [r4, #0]
 8000f8a:	f023 0320 	bic.w	r3, r3, #32
 8000f8e:	6023      	str	r3, [r4, #0]
 8000f90:	2310      	movs	r3, #16
 8000f92:	e7a7      	b.n	8000ee4 <_printf_i+0xf8>
 8000f94:	4824      	ldr	r0, [pc, #144]	; (8001028 <_printf_i+0x23c>)
 8000f96:	e7e4      	b.n	8000f62 <_printf_i+0x176>
 8000f98:	4615      	mov	r5, r2
 8000f9a:	e7bd      	b.n	8000f18 <_printf_i+0x12c>
 8000f9c:	682b      	ldr	r3, [r5, #0]
 8000f9e:	6826      	ldr	r6, [r4, #0]
 8000fa0:	6961      	ldr	r1, [r4, #20]
 8000fa2:	1d18      	adds	r0, r3, #4
 8000fa4:	6028      	str	r0, [r5, #0]
 8000fa6:	0635      	lsls	r5, r6, #24
 8000fa8:	681b      	ldr	r3, [r3, #0]
 8000faa:	d501      	bpl.n	8000fb0 <_printf_i+0x1c4>
 8000fac:	6019      	str	r1, [r3, #0]
 8000fae:	e002      	b.n	8000fb6 <_printf_i+0x1ca>
 8000fb0:	0670      	lsls	r0, r6, #25
 8000fb2:	d5fb      	bpl.n	8000fac <_printf_i+0x1c0>
 8000fb4:	8019      	strh	r1, [r3, #0]
 8000fb6:	2300      	movs	r3, #0
 8000fb8:	6123      	str	r3, [r4, #16]
 8000fba:	4615      	mov	r5, r2
 8000fbc:	e7bc      	b.n	8000f38 <_printf_i+0x14c>
 8000fbe:	682b      	ldr	r3, [r5, #0]
 8000fc0:	1d1a      	adds	r2, r3, #4
 8000fc2:	602a      	str	r2, [r5, #0]
 8000fc4:	681d      	ldr	r5, [r3, #0]
 8000fc6:	6862      	ldr	r2, [r4, #4]
 8000fc8:	2100      	movs	r1, #0
 8000fca:	4628      	mov	r0, r5
 8000fcc:	f7ff f920 	bl	8000210 <memchr>
 8000fd0:	b108      	cbz	r0, 8000fd6 <_printf_i+0x1ea>
 8000fd2:	1b40      	subs	r0, r0, r5
 8000fd4:	6060      	str	r0, [r4, #4]
 8000fd6:	6863      	ldr	r3, [r4, #4]
 8000fd8:	6123      	str	r3, [r4, #16]
 8000fda:	2300      	movs	r3, #0
 8000fdc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000fe0:	e7aa      	b.n	8000f38 <_printf_i+0x14c>
 8000fe2:	6923      	ldr	r3, [r4, #16]
 8000fe4:	462a      	mov	r2, r5
 8000fe6:	4649      	mov	r1, r9
 8000fe8:	4640      	mov	r0, r8
 8000fea:	47d0      	blx	sl
 8000fec:	3001      	adds	r0, #1
 8000fee:	d0ad      	beq.n	8000f4c <_printf_i+0x160>
 8000ff0:	6823      	ldr	r3, [r4, #0]
 8000ff2:	079b      	lsls	r3, r3, #30
 8000ff4:	d413      	bmi.n	800101e <_printf_i+0x232>
 8000ff6:	68e0      	ldr	r0, [r4, #12]
 8000ff8:	9b03      	ldr	r3, [sp, #12]
 8000ffa:	4298      	cmp	r0, r3
 8000ffc:	bfb8      	it	lt
 8000ffe:	4618      	movlt	r0, r3
 8001000:	e7a6      	b.n	8000f50 <_printf_i+0x164>
 8001002:	2301      	movs	r3, #1
 8001004:	4632      	mov	r2, r6
 8001006:	4649      	mov	r1, r9
 8001008:	4640      	mov	r0, r8
 800100a:	47d0      	blx	sl
 800100c:	3001      	adds	r0, #1
 800100e:	d09d      	beq.n	8000f4c <_printf_i+0x160>
 8001010:	3501      	adds	r5, #1
 8001012:	68e3      	ldr	r3, [r4, #12]
 8001014:	9903      	ldr	r1, [sp, #12]
 8001016:	1a5b      	subs	r3, r3, r1
 8001018:	42ab      	cmp	r3, r5
 800101a:	dcf2      	bgt.n	8001002 <_printf_i+0x216>
 800101c:	e7eb      	b.n	8000ff6 <_printf_i+0x20a>
 800101e:	2500      	movs	r5, #0
 8001020:	f104 0619 	add.w	r6, r4, #25
 8001024:	e7f5      	b.n	8001012 <_printf_i+0x226>
 8001026:	bf00      	nop
 8001028:	0800141c 	.word	0x0800141c
 800102c:	0800142d 	.word	0x0800142d

08001030 <__sflush_r>:
 8001030:	898a      	ldrh	r2, [r1, #12]
 8001032:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001036:	4605      	mov	r5, r0
 8001038:	0710      	lsls	r0, r2, #28
 800103a:	460c      	mov	r4, r1
 800103c:	d458      	bmi.n	80010f0 <__sflush_r+0xc0>
 800103e:	684b      	ldr	r3, [r1, #4]
 8001040:	2b00      	cmp	r3, #0
 8001042:	dc05      	bgt.n	8001050 <__sflush_r+0x20>
 8001044:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001046:	2b00      	cmp	r3, #0
 8001048:	dc02      	bgt.n	8001050 <__sflush_r+0x20>
 800104a:	2000      	movs	r0, #0
 800104c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001050:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001052:	2e00      	cmp	r6, #0
 8001054:	d0f9      	beq.n	800104a <__sflush_r+0x1a>
 8001056:	2300      	movs	r3, #0
 8001058:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800105c:	682f      	ldr	r7, [r5, #0]
 800105e:	6a21      	ldr	r1, [r4, #32]
 8001060:	602b      	str	r3, [r5, #0]
 8001062:	d032      	beq.n	80010ca <__sflush_r+0x9a>
 8001064:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001066:	89a3      	ldrh	r3, [r4, #12]
 8001068:	075a      	lsls	r2, r3, #29
 800106a:	d505      	bpl.n	8001078 <__sflush_r+0x48>
 800106c:	6863      	ldr	r3, [r4, #4]
 800106e:	1ac0      	subs	r0, r0, r3
 8001070:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001072:	b10b      	cbz	r3, 8001078 <__sflush_r+0x48>
 8001074:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001076:	1ac0      	subs	r0, r0, r3
 8001078:	2300      	movs	r3, #0
 800107a:	4602      	mov	r2, r0
 800107c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800107e:	6a21      	ldr	r1, [r4, #32]
 8001080:	4628      	mov	r0, r5
 8001082:	47b0      	blx	r6
 8001084:	1c43      	adds	r3, r0, #1
 8001086:	89a3      	ldrh	r3, [r4, #12]
 8001088:	d106      	bne.n	8001098 <__sflush_r+0x68>
 800108a:	6829      	ldr	r1, [r5, #0]
 800108c:	291d      	cmp	r1, #29
 800108e:	d82b      	bhi.n	80010e8 <__sflush_r+0xb8>
 8001090:	4a29      	ldr	r2, [pc, #164]	; (8001138 <__sflush_r+0x108>)
 8001092:	410a      	asrs	r2, r1
 8001094:	07d6      	lsls	r6, r2, #31
 8001096:	d427      	bmi.n	80010e8 <__sflush_r+0xb8>
 8001098:	2200      	movs	r2, #0
 800109a:	6062      	str	r2, [r4, #4]
 800109c:	04d9      	lsls	r1, r3, #19
 800109e:	6922      	ldr	r2, [r4, #16]
 80010a0:	6022      	str	r2, [r4, #0]
 80010a2:	d504      	bpl.n	80010ae <__sflush_r+0x7e>
 80010a4:	1c42      	adds	r2, r0, #1
 80010a6:	d101      	bne.n	80010ac <__sflush_r+0x7c>
 80010a8:	682b      	ldr	r3, [r5, #0]
 80010aa:	b903      	cbnz	r3, 80010ae <__sflush_r+0x7e>
 80010ac:	6560      	str	r0, [r4, #84]	; 0x54
 80010ae:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80010b0:	602f      	str	r7, [r5, #0]
 80010b2:	2900      	cmp	r1, #0
 80010b4:	d0c9      	beq.n	800104a <__sflush_r+0x1a>
 80010b6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010ba:	4299      	cmp	r1, r3
 80010bc:	d002      	beq.n	80010c4 <__sflush_r+0x94>
 80010be:	4628      	mov	r0, r5
 80010c0:	f7ff fbea 	bl	8000898 <_free_r>
 80010c4:	2000      	movs	r0, #0
 80010c6:	6360      	str	r0, [r4, #52]	; 0x34
 80010c8:	e7c0      	b.n	800104c <__sflush_r+0x1c>
 80010ca:	2301      	movs	r3, #1
 80010cc:	4628      	mov	r0, r5
 80010ce:	47b0      	blx	r6
 80010d0:	1c41      	adds	r1, r0, #1
 80010d2:	d1c8      	bne.n	8001066 <__sflush_r+0x36>
 80010d4:	682b      	ldr	r3, [r5, #0]
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	d0c5      	beq.n	8001066 <__sflush_r+0x36>
 80010da:	2b1d      	cmp	r3, #29
 80010dc:	d001      	beq.n	80010e2 <__sflush_r+0xb2>
 80010de:	2b16      	cmp	r3, #22
 80010e0:	d101      	bne.n	80010e6 <__sflush_r+0xb6>
 80010e2:	602f      	str	r7, [r5, #0]
 80010e4:	e7b1      	b.n	800104a <__sflush_r+0x1a>
 80010e6:	89a3      	ldrh	r3, [r4, #12]
 80010e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010ec:	81a3      	strh	r3, [r4, #12]
 80010ee:	e7ad      	b.n	800104c <__sflush_r+0x1c>
 80010f0:	690f      	ldr	r7, [r1, #16]
 80010f2:	2f00      	cmp	r7, #0
 80010f4:	d0a9      	beq.n	800104a <__sflush_r+0x1a>
 80010f6:	0793      	lsls	r3, r2, #30
 80010f8:	680e      	ldr	r6, [r1, #0]
 80010fa:	bf08      	it	eq
 80010fc:	694b      	ldreq	r3, [r1, #20]
 80010fe:	600f      	str	r7, [r1, #0]
 8001100:	bf18      	it	ne
 8001102:	2300      	movne	r3, #0
 8001104:	eba6 0807 	sub.w	r8, r6, r7
 8001108:	608b      	str	r3, [r1, #8]
 800110a:	f1b8 0f00 	cmp.w	r8, #0
 800110e:	dd9c      	ble.n	800104a <__sflush_r+0x1a>
 8001110:	6a21      	ldr	r1, [r4, #32]
 8001112:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001114:	4643      	mov	r3, r8
 8001116:	463a      	mov	r2, r7
 8001118:	4628      	mov	r0, r5
 800111a:	47b0      	blx	r6
 800111c:	2800      	cmp	r0, #0
 800111e:	dc06      	bgt.n	800112e <__sflush_r+0xfe>
 8001120:	89a3      	ldrh	r3, [r4, #12]
 8001122:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001126:	81a3      	strh	r3, [r4, #12]
 8001128:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800112c:	e78e      	b.n	800104c <__sflush_r+0x1c>
 800112e:	4407      	add	r7, r0
 8001130:	eba8 0800 	sub.w	r8, r8, r0
 8001134:	e7e9      	b.n	800110a <__sflush_r+0xda>
 8001136:	bf00      	nop
 8001138:	dfbffffe 	.word	0xdfbffffe

0800113c <_fflush_r>:
 800113c:	b538      	push	{r3, r4, r5, lr}
 800113e:	690b      	ldr	r3, [r1, #16]
 8001140:	4605      	mov	r5, r0
 8001142:	460c      	mov	r4, r1
 8001144:	b913      	cbnz	r3, 800114c <_fflush_r+0x10>
 8001146:	2500      	movs	r5, #0
 8001148:	4628      	mov	r0, r5
 800114a:	bd38      	pop	{r3, r4, r5, pc}
 800114c:	b118      	cbz	r0, 8001156 <_fflush_r+0x1a>
 800114e:	6a03      	ldr	r3, [r0, #32]
 8001150:	b90b      	cbnz	r3, 8001156 <_fflush_r+0x1a>
 8001152:	f7ff fa99 	bl	8000688 <__sinit>
 8001156:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800115a:	2b00      	cmp	r3, #0
 800115c:	d0f3      	beq.n	8001146 <_fflush_r+0xa>
 800115e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001160:	07d0      	lsls	r0, r2, #31
 8001162:	d404      	bmi.n	800116e <_fflush_r+0x32>
 8001164:	0599      	lsls	r1, r3, #22
 8001166:	d402      	bmi.n	800116e <_fflush_r+0x32>
 8001168:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800116a:	f7ff fb92 	bl	8000892 <__retarget_lock_acquire_recursive>
 800116e:	4628      	mov	r0, r5
 8001170:	4621      	mov	r1, r4
 8001172:	f7ff ff5d 	bl	8001030 <__sflush_r>
 8001176:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001178:	07da      	lsls	r2, r3, #31
 800117a:	4605      	mov	r5, r0
 800117c:	d4e4      	bmi.n	8001148 <_fflush_r+0xc>
 800117e:	89a3      	ldrh	r3, [r4, #12]
 8001180:	059b      	lsls	r3, r3, #22
 8001182:	d4e1      	bmi.n	8001148 <_fflush_r+0xc>
 8001184:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001186:	f7ff fb85 	bl	8000894 <__retarget_lock_release_recursive>
 800118a:	e7dd      	b.n	8001148 <_fflush_r+0xc>

0800118c <__swbuf_r>:
 800118c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800118e:	460e      	mov	r6, r1
 8001190:	4614      	mov	r4, r2
 8001192:	4605      	mov	r5, r0
 8001194:	b118      	cbz	r0, 800119e <__swbuf_r+0x12>
 8001196:	6a03      	ldr	r3, [r0, #32]
 8001198:	b90b      	cbnz	r3, 800119e <__swbuf_r+0x12>
 800119a:	f7ff fa75 	bl	8000688 <__sinit>
 800119e:	69a3      	ldr	r3, [r4, #24]
 80011a0:	60a3      	str	r3, [r4, #8]
 80011a2:	89a3      	ldrh	r3, [r4, #12]
 80011a4:	071a      	lsls	r2, r3, #28
 80011a6:	d525      	bpl.n	80011f4 <__swbuf_r+0x68>
 80011a8:	6923      	ldr	r3, [r4, #16]
 80011aa:	b31b      	cbz	r3, 80011f4 <__swbuf_r+0x68>
 80011ac:	6823      	ldr	r3, [r4, #0]
 80011ae:	6922      	ldr	r2, [r4, #16]
 80011b0:	1a98      	subs	r0, r3, r2
 80011b2:	6963      	ldr	r3, [r4, #20]
 80011b4:	b2f6      	uxtb	r6, r6
 80011b6:	4283      	cmp	r3, r0
 80011b8:	4637      	mov	r7, r6
 80011ba:	dc04      	bgt.n	80011c6 <__swbuf_r+0x3a>
 80011bc:	4621      	mov	r1, r4
 80011be:	4628      	mov	r0, r5
 80011c0:	f7ff ffbc 	bl	800113c <_fflush_r>
 80011c4:	b9e0      	cbnz	r0, 8001200 <__swbuf_r+0x74>
 80011c6:	68a3      	ldr	r3, [r4, #8]
 80011c8:	3b01      	subs	r3, #1
 80011ca:	60a3      	str	r3, [r4, #8]
 80011cc:	6823      	ldr	r3, [r4, #0]
 80011ce:	1c5a      	adds	r2, r3, #1
 80011d0:	6022      	str	r2, [r4, #0]
 80011d2:	701e      	strb	r6, [r3, #0]
 80011d4:	6962      	ldr	r2, [r4, #20]
 80011d6:	1c43      	adds	r3, r0, #1
 80011d8:	429a      	cmp	r2, r3
 80011da:	d004      	beq.n	80011e6 <__swbuf_r+0x5a>
 80011dc:	89a3      	ldrh	r3, [r4, #12]
 80011de:	07db      	lsls	r3, r3, #31
 80011e0:	d506      	bpl.n	80011f0 <__swbuf_r+0x64>
 80011e2:	2e0a      	cmp	r6, #10
 80011e4:	d104      	bne.n	80011f0 <__swbuf_r+0x64>
 80011e6:	4621      	mov	r1, r4
 80011e8:	4628      	mov	r0, r5
 80011ea:	f7ff ffa7 	bl	800113c <_fflush_r>
 80011ee:	b938      	cbnz	r0, 8001200 <__swbuf_r+0x74>
 80011f0:	4638      	mov	r0, r7
 80011f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011f4:	4621      	mov	r1, r4
 80011f6:	4628      	mov	r0, r5
 80011f8:	f000 f806 	bl	8001208 <__swsetup_r>
 80011fc:	2800      	cmp	r0, #0
 80011fe:	d0d5      	beq.n	80011ac <__swbuf_r+0x20>
 8001200:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8001204:	e7f4      	b.n	80011f0 <__swbuf_r+0x64>
	...

08001208 <__swsetup_r>:
 8001208:	b538      	push	{r3, r4, r5, lr}
 800120a:	4b2a      	ldr	r3, [pc, #168]	; (80012b4 <__swsetup_r+0xac>)
 800120c:	4605      	mov	r5, r0
 800120e:	6818      	ldr	r0, [r3, #0]
 8001210:	460c      	mov	r4, r1
 8001212:	b118      	cbz	r0, 800121c <__swsetup_r+0x14>
 8001214:	6a03      	ldr	r3, [r0, #32]
 8001216:	b90b      	cbnz	r3, 800121c <__swsetup_r+0x14>
 8001218:	f7ff fa36 	bl	8000688 <__sinit>
 800121c:	89a3      	ldrh	r3, [r4, #12]
 800121e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001222:	0718      	lsls	r0, r3, #28
 8001224:	d422      	bmi.n	800126c <__swsetup_r+0x64>
 8001226:	06d9      	lsls	r1, r3, #27
 8001228:	d407      	bmi.n	800123a <__swsetup_r+0x32>
 800122a:	2309      	movs	r3, #9
 800122c:	602b      	str	r3, [r5, #0]
 800122e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001232:	81a3      	strh	r3, [r4, #12]
 8001234:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001238:	e034      	b.n	80012a4 <__swsetup_r+0x9c>
 800123a:	0758      	lsls	r0, r3, #29
 800123c:	d512      	bpl.n	8001264 <__swsetup_r+0x5c>
 800123e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001240:	b141      	cbz	r1, 8001254 <__swsetup_r+0x4c>
 8001242:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001246:	4299      	cmp	r1, r3
 8001248:	d002      	beq.n	8001250 <__swsetup_r+0x48>
 800124a:	4628      	mov	r0, r5
 800124c:	f7ff fb24 	bl	8000898 <_free_r>
 8001250:	2300      	movs	r3, #0
 8001252:	6363      	str	r3, [r4, #52]	; 0x34
 8001254:	89a3      	ldrh	r3, [r4, #12]
 8001256:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800125a:	81a3      	strh	r3, [r4, #12]
 800125c:	2300      	movs	r3, #0
 800125e:	6063      	str	r3, [r4, #4]
 8001260:	6923      	ldr	r3, [r4, #16]
 8001262:	6023      	str	r3, [r4, #0]
 8001264:	89a3      	ldrh	r3, [r4, #12]
 8001266:	f043 0308 	orr.w	r3, r3, #8
 800126a:	81a3      	strh	r3, [r4, #12]
 800126c:	6923      	ldr	r3, [r4, #16]
 800126e:	b94b      	cbnz	r3, 8001284 <__swsetup_r+0x7c>
 8001270:	89a3      	ldrh	r3, [r4, #12]
 8001272:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001276:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800127a:	d003      	beq.n	8001284 <__swsetup_r+0x7c>
 800127c:	4621      	mov	r1, r4
 800127e:	4628      	mov	r0, r5
 8001280:	f000 f850 	bl	8001324 <__smakebuf_r>
 8001284:	89a0      	ldrh	r0, [r4, #12]
 8001286:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800128a:	f010 0301 	ands.w	r3, r0, #1
 800128e:	d00a      	beq.n	80012a6 <__swsetup_r+0x9e>
 8001290:	2300      	movs	r3, #0
 8001292:	60a3      	str	r3, [r4, #8]
 8001294:	6963      	ldr	r3, [r4, #20]
 8001296:	425b      	negs	r3, r3
 8001298:	61a3      	str	r3, [r4, #24]
 800129a:	6923      	ldr	r3, [r4, #16]
 800129c:	b943      	cbnz	r3, 80012b0 <__swsetup_r+0xa8>
 800129e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80012a2:	d1c4      	bne.n	800122e <__swsetup_r+0x26>
 80012a4:	bd38      	pop	{r3, r4, r5, pc}
 80012a6:	0781      	lsls	r1, r0, #30
 80012a8:	bf58      	it	pl
 80012aa:	6963      	ldrpl	r3, [r4, #20]
 80012ac:	60a3      	str	r3, [r4, #8]
 80012ae:	e7f4      	b.n	800129a <__swsetup_r+0x92>
 80012b0:	2000      	movs	r0, #0
 80012b2:	e7f7      	b.n	80012a4 <__swsetup_r+0x9c>
 80012b4:	20000058 	.word	0x20000058

080012b8 <_sbrk_r>:
 80012b8:	b538      	push	{r3, r4, r5, lr}
 80012ba:	4d06      	ldr	r5, [pc, #24]	; (80012d4 <_sbrk_r+0x1c>)
 80012bc:	2300      	movs	r3, #0
 80012be:	4604      	mov	r4, r0
 80012c0:	4608      	mov	r0, r1
 80012c2:	602b      	str	r3, [r5, #0]
 80012c4:	f7ff f86c 	bl	80003a0 <_sbrk>
 80012c8:	1c43      	adds	r3, r0, #1
 80012ca:	d102      	bne.n	80012d2 <_sbrk_r+0x1a>
 80012cc:	682b      	ldr	r3, [r5, #0]
 80012ce:	b103      	cbz	r3, 80012d2 <_sbrk_r+0x1a>
 80012d0:	6023      	str	r3, [r4, #0]
 80012d2:	bd38      	pop	{r3, r4, r5, pc}
 80012d4:	200001b8 	.word	0x200001b8

080012d8 <__swhatbuf_r>:
 80012d8:	b570      	push	{r4, r5, r6, lr}
 80012da:	460c      	mov	r4, r1
 80012dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012e0:	2900      	cmp	r1, #0
 80012e2:	b096      	sub	sp, #88	; 0x58
 80012e4:	4615      	mov	r5, r2
 80012e6:	461e      	mov	r6, r3
 80012e8:	da0d      	bge.n	8001306 <__swhatbuf_r+0x2e>
 80012ea:	89a3      	ldrh	r3, [r4, #12]
 80012ec:	f013 0f80 	tst.w	r3, #128	; 0x80
 80012f0:	f04f 0100 	mov.w	r1, #0
 80012f4:	bf0c      	ite	eq
 80012f6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80012fa:	2340      	movne	r3, #64	; 0x40
 80012fc:	2000      	movs	r0, #0
 80012fe:	6031      	str	r1, [r6, #0]
 8001300:	602b      	str	r3, [r5, #0]
 8001302:	b016      	add	sp, #88	; 0x58
 8001304:	bd70      	pop	{r4, r5, r6, pc}
 8001306:	466a      	mov	r2, sp
 8001308:	f000 f848 	bl	800139c <_fstat_r>
 800130c:	2800      	cmp	r0, #0
 800130e:	dbec      	blt.n	80012ea <__swhatbuf_r+0x12>
 8001310:	9901      	ldr	r1, [sp, #4]
 8001312:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8001316:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800131a:	4259      	negs	r1, r3
 800131c:	4159      	adcs	r1, r3
 800131e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001322:	e7eb      	b.n	80012fc <__swhatbuf_r+0x24>

08001324 <__smakebuf_r>:
 8001324:	898b      	ldrh	r3, [r1, #12]
 8001326:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001328:	079d      	lsls	r5, r3, #30
 800132a:	4606      	mov	r6, r0
 800132c:	460c      	mov	r4, r1
 800132e:	d507      	bpl.n	8001340 <__smakebuf_r+0x1c>
 8001330:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001334:	6023      	str	r3, [r4, #0]
 8001336:	6123      	str	r3, [r4, #16]
 8001338:	2301      	movs	r3, #1
 800133a:	6163      	str	r3, [r4, #20]
 800133c:	b002      	add	sp, #8
 800133e:	bd70      	pop	{r4, r5, r6, pc}
 8001340:	ab01      	add	r3, sp, #4
 8001342:	466a      	mov	r2, sp
 8001344:	f7ff ffc8 	bl	80012d8 <__swhatbuf_r>
 8001348:	9900      	ldr	r1, [sp, #0]
 800134a:	4605      	mov	r5, r0
 800134c:	4630      	mov	r0, r6
 800134e:	f7ff fb0f 	bl	8000970 <_malloc_r>
 8001352:	b948      	cbnz	r0, 8001368 <__smakebuf_r+0x44>
 8001354:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001358:	059a      	lsls	r2, r3, #22
 800135a:	d4ef      	bmi.n	800133c <__smakebuf_r+0x18>
 800135c:	f023 0303 	bic.w	r3, r3, #3
 8001360:	f043 0302 	orr.w	r3, r3, #2
 8001364:	81a3      	strh	r3, [r4, #12]
 8001366:	e7e3      	b.n	8001330 <__smakebuf_r+0xc>
 8001368:	89a3      	ldrh	r3, [r4, #12]
 800136a:	6020      	str	r0, [r4, #0]
 800136c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001370:	81a3      	strh	r3, [r4, #12]
 8001372:	9b00      	ldr	r3, [sp, #0]
 8001374:	6163      	str	r3, [r4, #20]
 8001376:	9b01      	ldr	r3, [sp, #4]
 8001378:	6120      	str	r0, [r4, #16]
 800137a:	b15b      	cbz	r3, 8001394 <__smakebuf_r+0x70>
 800137c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001380:	4630      	mov	r0, r6
 8001382:	f000 f81d 	bl	80013c0 <_isatty_r>
 8001386:	b128      	cbz	r0, 8001394 <__smakebuf_r+0x70>
 8001388:	89a3      	ldrh	r3, [r4, #12]
 800138a:	f023 0303 	bic.w	r3, r3, #3
 800138e:	f043 0301 	orr.w	r3, r3, #1
 8001392:	81a3      	strh	r3, [r4, #12]
 8001394:	89a3      	ldrh	r3, [r4, #12]
 8001396:	431d      	orrs	r5, r3
 8001398:	81a5      	strh	r5, [r4, #12]
 800139a:	e7cf      	b.n	800133c <__smakebuf_r+0x18>

0800139c <_fstat_r>:
 800139c:	b538      	push	{r3, r4, r5, lr}
 800139e:	4d07      	ldr	r5, [pc, #28]	; (80013bc <_fstat_r+0x20>)
 80013a0:	2300      	movs	r3, #0
 80013a2:	4604      	mov	r4, r0
 80013a4:	4608      	mov	r0, r1
 80013a6:	4611      	mov	r1, r2
 80013a8:	602b      	str	r3, [r5, #0]
 80013aa:	f7fe ffd0 	bl	800034e <_fstat>
 80013ae:	1c43      	adds	r3, r0, #1
 80013b0:	d102      	bne.n	80013b8 <_fstat_r+0x1c>
 80013b2:	682b      	ldr	r3, [r5, #0]
 80013b4:	b103      	cbz	r3, 80013b8 <_fstat_r+0x1c>
 80013b6:	6023      	str	r3, [r4, #0]
 80013b8:	bd38      	pop	{r3, r4, r5, pc}
 80013ba:	bf00      	nop
 80013bc:	200001b8 	.word	0x200001b8

080013c0 <_isatty_r>:
 80013c0:	b538      	push	{r3, r4, r5, lr}
 80013c2:	4d06      	ldr	r5, [pc, #24]	; (80013dc <_isatty_r+0x1c>)
 80013c4:	2300      	movs	r3, #0
 80013c6:	4604      	mov	r4, r0
 80013c8:	4608      	mov	r0, r1
 80013ca:	602b      	str	r3, [r5, #0]
 80013cc:	f7fe ffcf 	bl	800036e <_isatty>
 80013d0:	1c43      	adds	r3, r0, #1
 80013d2:	d102      	bne.n	80013da <_isatty_r+0x1a>
 80013d4:	682b      	ldr	r3, [r5, #0]
 80013d6:	b103      	cbz	r3, 80013da <_isatty_r+0x1a>
 80013d8:	6023      	str	r3, [r4, #0]
 80013da:	bd38      	pop	{r3, r4, r5, pc}
 80013dc:	200001b8 	.word	0x200001b8

080013e0 <_init>:
 80013e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013e2:	bf00      	nop
 80013e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013e6:	bc08      	pop	{r3}
 80013e8:	469e      	mov	lr, r3
 80013ea:	4770      	bx	lr

080013ec <_fini>:
 80013ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ee:	bf00      	nop
 80013f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013f2:	bc08      	pop	{r3}
 80013f4:	469e      	mov	lr, r3
 80013f6:	4770      	bx	lr
